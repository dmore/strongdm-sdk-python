window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "strongdm", "modulename": "strongdm", "type": "module", "doc": "<h1 id=\"strongdm-sdk-for-python\">strongDM SDK for Python</h1>\n\n<p>This is the official <a href=\"https://www.strongdm.com/\">strongDM</a> SDK for the Python\nprogramming language.</p>\n\n<p>Learn more with our <a href=\"https://www.strongdm.com/docs/api/\">\ud83d\udcdastrongDM API docs</a> or\n<a href=\"https://strongdm.github.io/strongdm-sdk-python-docs/\">\ud83d\udcd3browse the SDK\nreference</a>.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code>$ pip install strongdm\n</code></pre></div>\n\n<p>strongDM uses <a href=\"https://semver.org/\">semantic versioning</a>. We do not guarantee\ncompatibility between major versions. Be sure to use version constraints to pin\nyour dependency to the desired major version of the strongDM SDK.</p>\n\n<h2 id=\"authentication\">Authentication</h2>\n\n<p>If you don't already have them you will need to generate a set of API keys,\ninstructions are here: <a href=\"https://www.strongdm.com/docs/admin-guide/api-credentials/\">API\nCredentials</a></p>\n\n<p>Add the keys as environment variables; the SDK will need to access these keys\nfor every request.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code>$ <span class=\"nb\">export</span> <span class=\"nv\">SDM_API_ACCESS_KEY</span><span class=\"o\">=</span>&lt;YOUR ACCESS KEY&gt;\n$ <span class=\"nb\">export</span> <span class=\"nv\">SDM_API_SECRET_KEY</span><span class=\"o\">=</span>&lt;YOUR SECRET KEY&gt;\n</code></pre></div>\n\n<h2 id=\"list-users\">List Users</h2>\n\n<p>The following code lists all registered users:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">strongdm</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">strongdm</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;SDM_API_ACCESS_KEY&quot;</span><span class=\"p\">),</span>\n                        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;SDM_API_SECRET_KEY&quot;</span><span class=\"p\">))</span>\n\n    <span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">accounts</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">user</span> <span class=\"ow\">in</span> <span class=\"n\">users</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<h2 id=\"useful-links\">Useful Links</h2>\n\n<ul>\n<li>Documentation: <a href=\"https://strongdm.github.io/strongdm-sdk-python-docs/\">strongdm package</a></li>\n<li><a href=\"https://github.com/strongdm/strongdm-sdk-python/releases/tag/v3.0.0\">Migrating from v2 to v3</a></li>\n<li><a href=\"https://github.com/strongdm/strongdm-sdk-python/wiki/Migrating-from-Role-Grants-to-Access-Rules\">Migrating from Role Grants to Access Rules</a></li>\n<li>Examples: <a href=\"https://github.com/strongdm/strongdm-sdk-python-examples\">GitHub - strongdm/strongdm-sdk-python-examples</a>\n<ol>\n<li><a href=\"https://github.com/strongdm/strongdm-sdk-python-examples/tree/master/1_managing_resources\">Managing Resources</a></li>\n<li><a href=\"https://github.com/strongdm/strongdm-sdk-python-examples/tree/master/2_managing_accounts\">Managing Accounts</a></li>\n<li><a href=\"https://github.com/strongdm/strongdm-sdk-python-examples/tree/master/3_managing_roles\">Managing Roles</a></li>\n<li><a href=\"https://github.com/strongdm/strongdm-sdk-python-examples/tree/master/4_managing_gateways\">Managing Gateways</a></li>\n</ol></li>\n</ul>\n\n<h2 id=\"license\">License</h2>\n\n<p><a href=\"https://github.com/strongdm/strongdm-sdk-python/blob/master/LICENSE\">Apache 2</a></p>\n\n<h2 id=\"contributing\">Contributing</h2>\n\n<p>Currently, we are not accepting pull requests directly to this repository, but\nour users are some of the most resourceful and ambitious folks out there. So, if\nyou have something to contribute, find a bug, or just want to give us some\nfeedback, please email <a href=\"&#x6d;&#x61;&#105;l&#x74;&#111;&#58;s&#117;&#x70;p&#111;&#x72;t&#64;&#x73;&#116;&#x72;&#x6f;&#110;g&#100;&#109;&#x2e;&#99;&#x6f;&#x6d;\">s&#117;&#x70;p&#111;&#x72;t&#64;&#x73;&#116;&#x72;&#x6f;&#110;g&#100;&#109;&#x2e;&#99;&#x6f;&#x6d;</a>.</p>\n"}, {"fullname": "strongdm.client", "modulename": "strongdm.client", "type": "module", "doc": "<p></p>\n"}, {"fullname": "strongdm.client.Client", "modulename": "strongdm.client", "qualname": "Client", "type": "class", "doc": "<p>Client interacts with the strongDM API.</p>\n"}, {"fullname": "strongdm.client.Client.__init__", "modulename": "strongdm.client", "qualname": "Client.__init__", "type": "function", "doc": "<p>Create a new Client.</p>\n\n<ul>\n<li>api_access_key: the access key to authenticate with strongDM</li>\n<li>api_secret: the secret key to authenticate with strongDM</li>\n</ul>\n", "signature": "(\n    self,\n    api_access_key,\n    api_secret,\n    host='api.strongdm.com:443',\n    insecure=False,\n    retry_rate_limit_errors=True\n)", "funcdef": "def"}, {"fullname": "strongdm.client.Client.account_attachments", "modulename": "strongdm.client", "qualname": "Client.account_attachments", "type": "variable", "doc": "<p>AccountAttachments assign an account to a role.</p>\n\n<p>See <code>strongdm.svc.AccountAttachments</code>.</p>\n"}, {"fullname": "strongdm.client.Client.account_grants", "modulename": "strongdm.client", "qualname": "Client.account_grants", "type": "variable", "doc": "<p>AccountGrants assign a resource directly to an account, giving the account the permission to connect to that resource.</p>\n\n<p>See <code>strongdm.svc.AccountGrants</code>.</p>\n"}, {"fullname": "strongdm.client.Client.accounts", "modulename": "strongdm.client", "qualname": "Client.accounts", "type": "variable", "doc": "<p>Accounts are users that have access to strongDM. There are two types of accounts:</p>\n\n<ol>\n<li><strong>Users:</strong> humans who are authenticated through username and password or SSO.</li>\n<li><strong>Service Accounts:</strong> machines that are authenticated using a service token.</li>\n</ol>\n\n<p>See <code>strongdm.svc.Accounts</code>.</p>\n"}, {"fullname": "strongdm.client.Client.control_panel", "modulename": "strongdm.client", "qualname": "Client.control_panel", "type": "variable", "doc": "<p>ControlPanel contains all administrative controls.</p>\n\n<p>See <code>strongdm.svc.ControlPanel</code>.</p>\n"}, {"fullname": "strongdm.client.Client.nodes", "modulename": "strongdm.client", "qualname": "Client.nodes", "type": "variable", "doc": "<p>Nodes make up the strongDM network, and allow your users to connect securely to your resources. There are two types of nodes:</p>\n\n<ul>\n<li><strong>Gateways</strong> are the entry points into network. They listen for connection from the strongDM client, and provide access to databases and servers.</li>\n<li><strong>Relays</strong> are used to extend the strongDM network into segmented subnets. They provide access to databases and servers but do not listen for incoming connections.</li>\n</ul>\n\n<p>See <code>strongdm.svc.Nodes</code>.</p>\n"}, {"fullname": "strongdm.client.Client.remote_identities", "modulename": "strongdm.client", "qualname": "Client.remote_identities", "type": "variable", "doc": "<p>RemoteIdentities assign a resource directly to an account, giving the account the permission to connect to that resource.</p>\n\n<p>See <code>strongdm.svc.RemoteIdentities</code>.</p>\n"}, {"fullname": "strongdm.client.Client.remote_identity_groups", "modulename": "strongdm.client", "qualname": "Client.remote_identity_groups", "type": "variable", "doc": "<p>A RemoteIdentityGroup is a named grouping of Remote Identities for Accounts.\n An Account's relationship to a RemoteIdentityGroup is defined via RemoteIdentity objects.</p>\n\n<p>See <code>strongdm.svc.RemoteIdentityGroups</code>.</p>\n"}, {"fullname": "strongdm.client.Client.resources", "modulename": "strongdm.client", "qualname": "Client.resources", "type": "variable", "doc": "<p>Resources are databases, servers, clusters, websites, or clouds that strongDM\n delegates access to.</p>\n\n<p>See <code>strongdm.svc.Resources</code>.</p>\n"}, {"fullname": "strongdm.client.Client.roles", "modulename": "strongdm.client", "qualname": "Client.roles", "type": "variable", "doc": "<p>A Role has a list of access rules which determine which Resources the members\n of the Role have access to. An Account can be a member of multiple Roles via\n AccountAttachments.</p>\n\n<p>See <code>strongdm.svc.Roles</code>.</p>\n"}, {"fullname": "strongdm.client.Client.secret_stores", "modulename": "strongdm.client", "qualname": "Client.secret_stores", "type": "variable", "doc": "<p>SecretStores are servers where resource secrets (passwords, keys) are stored.</p>\n\n<p>See <code>strongdm.svc.SecretStores</code>.</p>\n"}, {"fullname": "strongdm.client.Client.close", "modulename": "strongdm.client", "qualname": "Client.close", "type": "function", "doc": "<p>Closes this Client and releases all resources held by it.</p>\n\n<p>Closing the Client will immediately terminate all RPCs active with the\nClient and it is not valid to invoke new RPCs with the Client.</p>\n\n<p>This method is idempotent.</p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.client.Client.get_metadata", "modulename": "strongdm.client", "qualname": "Client.get_metadata", "type": "function", "doc": "<p></p>\n", "signature": "(self, method_name, req)", "funcdef": "def"}, {"fullname": "strongdm.client.Client.sign", "modulename": "strongdm.client", "qualname": "Client.sign", "type": "function", "doc": "<p></p>\n", "signature": "(self, method_name, request_bytes)", "funcdef": "def"}, {"fullname": "strongdm.client.Client.jitterSleep", "modulename": "strongdm.client", "qualname": "Client.jitterSleep", "type": "function", "doc": "<p></p>\n", "signature": "(self, iter)", "funcdef": "def"}, {"fullname": "strongdm.client.Client.shouldRetry", "modulename": "strongdm.client", "qualname": "Client.shouldRetry", "type": "function", "doc": "<p></p>\n", "signature": "(self, iter, err)", "funcdef": "def"}, {"fullname": "strongdm.constants", "modulename": "strongdm.constants", "type": "module", "doc": "<p></p>\n"}, {"fullname": "strongdm.constants.PermissionLevel", "modulename": "strongdm.constants", "qualname": "PermissionLevel", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.constants.PermissionLevel.__init__", "modulename": "strongdm.constants", "qualname": "PermissionLevel.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, {"fullname": "strongdm.constants.PermissionLevel.ROOT_ADMIN", "modulename": "strongdm.constants", "qualname": "PermissionLevel.ROOT_ADMIN", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'root-admin'"}, {"fullname": "strongdm.constants.PermissionLevel.ADMIN", "modulename": "strongdm.constants", "qualname": "PermissionLevel.ADMIN", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'admin'"}, {"fullname": "strongdm.constants.PermissionLevel.DATABASE_ADMIN", "modulename": "strongdm.constants", "qualname": "PermissionLevel.DATABASE_ADMIN", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'database-admin'"}, {"fullname": "strongdm.constants.PermissionLevel.TEAM_LEADER", "modulename": "strongdm.constants", "qualname": "PermissionLevel.TEAM_LEADER", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'multi-team-leader'"}, {"fullname": "strongdm.constants.PermissionLevel.USER", "modulename": "strongdm.constants", "qualname": "PermissionLevel.USER", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'user'"}, {"fullname": "strongdm.constants.PermissionLevel.RELAY", "modulename": "strongdm.constants", "qualname": "PermissionLevel.RELAY", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'relay'"}, {"fullname": "strongdm.constants.PermissionLevel.ADMIN_TOKEN", "modulename": "strongdm.constants", "qualname": "PermissionLevel.ADMIN_TOKEN", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'admin-token'"}, {"fullname": "strongdm.constants.PermissionLevel.SCIM_TOKEN", "modulename": "strongdm.constants", "qualname": "PermissionLevel.SCIM_TOKEN", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'scim-token'"}, {"fullname": "strongdm.constants.PermissionLevel.SERVICE", "modulename": "strongdm.constants", "qualname": "PermissionLevel.SERVICE", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'service'"}, {"fullname": "strongdm.constants.PermissionLevel.SUSPENDED", "modulename": "strongdm.constants", "qualname": "PermissionLevel.SUSPENDED", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'suspended'"}, {"fullname": "strongdm.constants.PermissionLevel.EMPTY", "modulename": "strongdm.constants", "qualname": "PermissionLevel.EMPTY", "type": "variable", "doc": "<p></p>\n", "default_value": " = ''"}, {"fullname": "strongdm.constants.NodeState", "modulename": "strongdm.constants", "qualname": "NodeState", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.constants.NodeState.__init__", "modulename": "strongdm.constants", "qualname": "NodeState.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, {"fullname": "strongdm.constants.NodeState.NEW", "modulename": "strongdm.constants", "qualname": "NodeState.NEW", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'new'"}, {"fullname": "strongdm.constants.NodeState.VERIFYING_RESTART", "modulename": "strongdm.constants", "qualname": "NodeState.VERIFYING_RESTART", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'verifying_restart'"}, {"fullname": "strongdm.constants.NodeState.AWAITING_RESTART", "modulename": "strongdm.constants", "qualname": "NodeState.AWAITING_RESTART", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'awaiting_restart'"}, {"fullname": "strongdm.constants.NodeState.RESTARTING", "modulename": "strongdm.constants", "qualname": "NodeState.RESTARTING", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'restarting'"}, {"fullname": "strongdm.constants.NodeState.STARTED", "modulename": "strongdm.constants", "qualname": "NodeState.STARTED", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'started'"}, {"fullname": "strongdm.constants.NodeState.STOPPED", "modulename": "strongdm.constants", "qualname": "NodeState.STOPPED", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'stopped'"}, {"fullname": "strongdm.constants.NodeState.DEAD", "modulename": "strongdm.constants", "qualname": "NodeState.DEAD", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'dead'"}, {"fullname": "strongdm.constants.Provider", "modulename": "strongdm.constants", "qualname": "Provider", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.constants.Provider.__init__", "modulename": "strongdm.constants", "qualname": "Provider.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, {"fullname": "strongdm.constants.Provider.NONE", "modulename": "strongdm.constants", "qualname": "Provider.NONE", "type": "variable", "doc": "<p></p>\n", "default_value": " = ''"}, {"fullname": "strongdm.constants.Provider.OKTA", "modulename": "strongdm.constants", "qualname": "Provider.OKTA", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'okta'"}, {"fullname": "strongdm.constants.Provider.SAIL_POINT", "modulename": "strongdm.constants", "qualname": "Provider.SAIL_POINT", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'sailpoint'"}, {"fullname": "strongdm.constants.Provider.AZURE", "modulename": "strongdm.constants", "qualname": "Provider.AZURE", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'azure'"}, {"fullname": "strongdm.constants.Provider.GENERIC", "modulename": "strongdm.constants", "qualname": "Provider.GENERIC", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'generic'"}, {"fullname": "strongdm.constants.Provider.ONE_LOGIN", "modulename": "strongdm.constants", "qualname": "Provider.ONE_LOGIN", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'onelogin'"}, {"fullname": "strongdm.constants.Provider.GOOGLE", "modulename": "strongdm.constants", "qualname": "Provider.GOOGLE", "type": "variable", "doc": "<p></p>\n", "default_value": " = 'google'"}, {"fullname": "strongdm.errors", "modulename": "strongdm.errors", "type": "module", "doc": "<p></p>\n"}, {"fullname": "strongdm.errors.RPCError", "modulename": "strongdm.errors", "qualname": "RPCError", "type": "class", "doc": "<p>A generic RPC error</p>\n", "bases": "builtins.Exception"}, {"fullname": "strongdm.errors.RPCError.__init__", "modulename": "strongdm.errors", "qualname": "RPCError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, msg, code)", "funcdef": "def"}, {"fullname": "strongdm.errors.AlreadyExistsError", "modulename": "strongdm.errors", "qualname": "AlreadyExistsError", "type": "class", "doc": "<p>Used when an entity already exists in the system</p>\n", "bases": "RPCError"}, {"fullname": "strongdm.errors.AlreadyExistsError.__init__", "modulename": "strongdm.errors", "qualname": "AlreadyExistsError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, msg)", "funcdef": "def"}, {"fullname": "strongdm.errors.NotFoundError", "modulename": "strongdm.errors", "qualname": "NotFoundError", "type": "class", "doc": "<p>Used when an entity does not exist in the system</p>\n", "bases": "RPCError"}, {"fullname": "strongdm.errors.NotFoundError.__init__", "modulename": "strongdm.errors", "qualname": "NotFoundError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, msg)", "funcdef": "def"}, {"fullname": "strongdm.errors.BadRequestError", "modulename": "strongdm.errors", "qualname": "BadRequestError", "type": "class", "doc": "<p>Identifies a bad request sent by the client</p>\n", "bases": "RPCError"}, {"fullname": "strongdm.errors.BadRequestError.__init__", "modulename": "strongdm.errors", "qualname": "BadRequestError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, msg)", "funcdef": "def"}, {"fullname": "strongdm.errors.AuthenticationError", "modulename": "strongdm.errors", "qualname": "AuthenticationError", "type": "class", "doc": "<p>Used to specify an authentication failure condition</p>\n", "bases": "RPCError"}, {"fullname": "strongdm.errors.AuthenticationError.__init__", "modulename": "strongdm.errors", "qualname": "AuthenticationError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, msg)", "funcdef": "def"}, {"fullname": "strongdm.errors.PermissionError", "modulename": "strongdm.errors", "qualname": "PermissionError", "type": "class", "doc": "<p>Used to specify a permissions violation</p>\n", "bases": "RPCError"}, {"fullname": "strongdm.errors.PermissionError.__init__", "modulename": "strongdm.errors", "qualname": "PermissionError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, msg)", "funcdef": "def"}, {"fullname": "strongdm.errors.InternalError", "modulename": "strongdm.errors", "qualname": "InternalError", "type": "class", "doc": "<p>Used to specify an internal system error</p>\n", "bases": "RPCError"}, {"fullname": "strongdm.errors.InternalError.__init__", "modulename": "strongdm.errors", "qualname": "InternalError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, msg)", "funcdef": "def"}, {"fullname": "strongdm.errors.RateLimitError", "modulename": "strongdm.errors", "qualname": "RateLimitError", "type": "class", "doc": "<p>Used when rate limit is exceeded</p>\n", "bases": "RPCError"}, {"fullname": "strongdm.errors.RateLimitError.__init__", "modulename": "strongdm.errors", "qualname": "RateLimitError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, msg, rate_limit)", "funcdef": "def"}, {"fullname": "strongdm.errors.TimeoutError", "modulename": "strongdm.errors", "qualname": "TimeoutError", "type": "class", "doc": "<p>Used when a request takes too long</p>\n", "bases": "RPCError"}, {"fullname": "strongdm.errors.TimeoutError.__init__", "modulename": "strongdm.errors", "qualname": "TimeoutError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.errors.UnknownError", "modulename": "strongdm.errors", "qualname": "UnknownError", "type": "class", "doc": "<p>Generic wrapper that indicates an unknown internal error in the SDK.</p>\n", "bases": "RPCError"}, {"fullname": "strongdm.errors.UnknownError.__init__", "modulename": "strongdm.errors", "qualname": "UnknownError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, msg)", "funcdef": "def"}, {"fullname": "strongdm.models", "modulename": "strongdm.models", "type": "module", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKS", "modulename": "strongdm.models", "qualname": "AKS", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKS.__init__", "modulename": "strongdm.models", "qualname": "AKS.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    certificate_authority=None,\n    client_certificate=None,\n    client_key=None,\n    egress_filter=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    remote_identity_group_id=None,\n    remote_identity_healthcheck_username=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AKS.bind_interface", "modulename": "strongdm.models", "qualname": "AKS.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AKS.certificate_authority", "modulename": "strongdm.models", "qualname": "AKS.certificate_authority", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKS.client_certificate", "modulename": "strongdm.models", "qualname": "AKS.client_certificate", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKS.client_key", "modulename": "strongdm.models", "qualname": "AKS.client_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKS.egress_filter", "modulename": "strongdm.models", "qualname": "AKS.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AKS.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "AKS.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.AKS.healthy", "modulename": "strongdm.models", "qualname": "AKS.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AKS.hostname", "modulename": "strongdm.models", "qualname": "AKS.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKS.id", "modulename": "strongdm.models", "qualname": "AKS.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AKS.name", "modulename": "strongdm.models", "qualname": "AKS.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AKS.port", "modulename": "strongdm.models", "qualname": "AKS.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKS.port_override", "modulename": "strongdm.models", "qualname": "AKS.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKS.remote_identity_group_id", "modulename": "strongdm.models", "qualname": "AKS.remote_identity_group_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKS.remote_identity_healthcheck_username", "modulename": "strongdm.models", "qualname": "AKS.remote_identity_healthcheck_username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKS.secret_store_id", "modulename": "strongdm.models", "qualname": "AKS.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AKS.tags", "modulename": "strongdm.models", "qualname": "AKS.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AKS.to_dict", "modulename": "strongdm.models", "qualname": "AKS.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AKS.from_dict", "modulename": "strongdm.models", "qualname": "AKS.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSBasicAuth", "modulename": "strongdm.models", "qualname": "AKSBasicAuth", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.__init__", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSBasicAuth.bind_interface", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.egress_filter", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.healthy", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.hostname", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.id", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.name", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.password", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.port", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.port_override", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.secret_store_id", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.tags", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.username", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSBasicAuth.to_dict", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSBasicAuth.from_dict", "modulename": "strongdm.models", "qualname": "AKSBasicAuth.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSServiceAccount", "modulename": "strongdm.models", "qualname": "AKSServiceAccount", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.__init__", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    remote_identity_group_id=None,\n    remote_identity_healthcheck_username=None,\n    secret_store_id=None,\n    tags=None,\n    token=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSServiceAccount.bind_interface", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.egress_filter", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.healthy", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.hostname", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.id", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.name", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.port", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.port_override", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.remote_identity_group_id", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.remote_identity_group_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.remote_identity_healthcheck_username", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.remote_identity_healthcheck_username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.secret_store_id", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.tags", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.token", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.token", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccount.to_dict", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSServiceAccount.from_dict", "modulename": "strongdm.models", "qualname": "AKSServiceAccount.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.__init__", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    token=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.bind_interface", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.egress_filter", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.healthy", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.hostname", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.id", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.name", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.port", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.port_override", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.secret_store_id", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.tags", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.token", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.token", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.to_dict", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSServiceAccountUserImpersonation.from_dict", "modulename": "strongdm.models", "qualname": "AKSServiceAccountUserImpersonation.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSUserImpersonation", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.__init__", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    certificate_authority=None,\n    client_certificate=None,\n    client_key=None,\n    egress_filter=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSUserImpersonation.bind_interface", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.certificate_authority", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.certificate_authority", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.client_certificate", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.client_certificate", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.client_key", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.client_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.egress_filter", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.healthy", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.hostname", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.id", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.name", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.port", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.port_override", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.secret_store_id", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.tags", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AKSUserImpersonation.to_dict", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AKSUserImpersonation.from_dict", "modulename": "strongdm.models", "qualname": "AKSUserImpersonation.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AWS", "modulename": "strongdm.models", "qualname": "AWS", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWS.__init__", "modulename": "strongdm.models", "qualname": "AWS.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    access_key=None,\n    bind_interface=None,\n    egress_filter=None,\n    healthcheck_region=None,\n    healthy=None,\n    id=None,\n    name=None,\n    role_arn=None,\n    role_external_id=None,\n    secret_access_key=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AWS.access_key", "modulename": "strongdm.models", "qualname": "AWS.access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWS.bind_interface", "modulename": "strongdm.models", "qualname": "AWS.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AWS.egress_filter", "modulename": "strongdm.models", "qualname": "AWS.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AWS.healthcheck_region", "modulename": "strongdm.models", "qualname": "AWS.healthcheck_region", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWS.healthy", "modulename": "strongdm.models", "qualname": "AWS.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AWS.id", "modulename": "strongdm.models", "qualname": "AWS.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AWS.name", "modulename": "strongdm.models", "qualname": "AWS.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AWS.role_arn", "modulename": "strongdm.models", "qualname": "AWS.role_arn", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWS.role_external_id", "modulename": "strongdm.models", "qualname": "AWS.role_external_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWS.secret_access_key", "modulename": "strongdm.models", "qualname": "AWS.secret_access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWS.secret_store_id", "modulename": "strongdm.models", "qualname": "AWS.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AWS.tags", "modulename": "strongdm.models", "qualname": "AWS.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AWS.to_dict", "modulename": "strongdm.models", "qualname": "AWS.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AWS.from_dict", "modulename": "strongdm.models", "qualname": "AWS.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AWSConsole", "modulename": "strongdm.models", "qualname": "AWSConsole", "type": "class", "doc": "<p>AWSConsole is currently unstable, and its API may change, or it may be removed,\nwithout a major version bump.</p>\n"}, {"fullname": "strongdm.models.AWSConsole.__init__", "modulename": "strongdm.models", "qualname": "AWSConsole.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    enable_env_variables=None,\n    healthy=None,\n    id=None,\n    name=None,\n    port_override=None,\n    region=None,\n    remote_identity_group_id=None,\n    remote_identity_healthcheck_username=None,\n    role_arn=None,\n    role_external_id=None,\n    secret_store_id=None,\n    session_expiry=None,\n    subdomain=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AWSConsole.bind_interface", "modulename": "strongdm.models", "qualname": "AWSConsole.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AWSConsole.egress_filter", "modulename": "strongdm.models", "qualname": "AWSConsole.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AWSConsole.enable_env_variables", "modulename": "strongdm.models", "qualname": "AWSConsole.enable_env_variables", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsole.healthy", "modulename": "strongdm.models", "qualname": "AWSConsole.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AWSConsole.id", "modulename": "strongdm.models", "qualname": "AWSConsole.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AWSConsole.name", "modulename": "strongdm.models", "qualname": "AWSConsole.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AWSConsole.port_override", "modulename": "strongdm.models", "qualname": "AWSConsole.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsole.region", "modulename": "strongdm.models", "qualname": "AWSConsole.region", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsole.remote_identity_group_id", "modulename": "strongdm.models", "qualname": "AWSConsole.remote_identity_group_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsole.remote_identity_healthcheck_username", "modulename": "strongdm.models", "qualname": "AWSConsole.remote_identity_healthcheck_username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsole.role_arn", "modulename": "strongdm.models", "qualname": "AWSConsole.role_arn", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsole.role_external_id", "modulename": "strongdm.models", "qualname": "AWSConsole.role_external_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsole.secret_store_id", "modulename": "strongdm.models", "qualname": "AWSConsole.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AWSConsole.session_expiry", "modulename": "strongdm.models", "qualname": "AWSConsole.session_expiry", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsole.subdomain", "modulename": "strongdm.models", "qualname": "AWSConsole.subdomain", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsole.tags", "modulename": "strongdm.models", "qualname": "AWSConsole.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AWSConsole.to_dict", "modulename": "strongdm.models", "qualname": "AWSConsole.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AWSConsole.from_dict", "modulename": "strongdm.models", "qualname": "AWSConsole.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair", "type": "class", "doc": "<p>AWSConsoleStaticKeyPair is currently unstable, and its API may change, or it may be removed,\nwithout a major version bump.</p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.__init__", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    access_key=None,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    id=None,\n    name=None,\n    port_override=None,\n    region=None,\n    remote_identity_group_id=None,\n    remote_identity_healthcheck_username=None,\n    role_arn=None,\n    role_external_id=None,\n    secret_access_key=None,\n    secret_store_id=None,\n    session_expiry=None,\n    subdomain=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.access_key", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.bind_interface", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.egress_filter", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.healthy", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.id", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.name", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.port_override", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.region", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.region", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.remote_identity_group_id", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.remote_identity_group_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.remote_identity_healthcheck_username", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.remote_identity_healthcheck_username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.role_arn", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.role_arn", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.role_external_id", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.role_external_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.secret_access_key", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.secret_access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.secret_store_id", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.session_expiry", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.session_expiry", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.subdomain", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.subdomain", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.tags", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.to_dict", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AWSConsoleStaticKeyPair.from_dict", "modulename": "strongdm.models", "qualname": "AWSConsoleStaticKeyPair.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AWSStore", "modulename": "strongdm.models", "qualname": "AWSStore", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSStore.__init__", "modulename": "strongdm.models", "qualname": "AWSStore.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, id=None, name=None, region=None, tags=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AWSStore.id", "modulename": "strongdm.models", "qualname": "AWSStore.id", "type": "variable", "doc": "<p>Unique identifier of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.AWSStore.name", "modulename": "strongdm.models", "qualname": "AWSStore.name", "type": "variable", "doc": "<p>Unique human-readable name of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.AWSStore.region", "modulename": "strongdm.models", "qualname": "AWSStore.region", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AWSStore.tags", "modulename": "strongdm.models", "qualname": "AWSStore.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AWSStore.to_dict", "modulename": "strongdm.models", "qualname": "AWSStore.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AWSStore.from_dict", "modulename": "strongdm.models", "qualname": "AWSStore.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachment", "modulename": "strongdm.models", "qualname": "AccountAttachment", "type": "class", "doc": "<p>AccountAttachments assign an account to a role.</p>\n"}, {"fullname": "strongdm.models.AccountAttachment.__init__", "modulename": "strongdm.models", "qualname": "AccountAttachment.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, account_id=None, id=None, role_id=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachment.account_id", "modulename": "strongdm.models", "qualname": "AccountAttachment.account_id", "type": "variable", "doc": "<p>The id of the account of this AccountAttachment.</p>\n"}, {"fullname": "strongdm.models.AccountAttachment.id", "modulename": "strongdm.models", "qualname": "AccountAttachment.id", "type": "variable", "doc": "<p>Unique identifier of the AccountAttachment.</p>\n"}, {"fullname": "strongdm.models.AccountAttachment.role_id", "modulename": "strongdm.models", "qualname": "AccountAttachment.role_id", "type": "variable", "doc": "<p>The id of the attached role of this AccountAttachment.</p>\n"}, {"fullname": "strongdm.models.AccountAttachment.to_dict", "modulename": "strongdm.models", "qualname": "AccountAttachment.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachment.from_dict", "modulename": "strongdm.models", "qualname": "AccountAttachment.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachmentCreateResponse", "modulename": "strongdm.models", "qualname": "AccountAttachmentCreateResponse", "type": "class", "doc": "<p>AccountAttachmentCreateResponse reports how the AccountAttachments were created in the system.</p>\n"}, {"fullname": "strongdm.models.AccountAttachmentCreateResponse.__init__", "modulename": "strongdm.models", "qualname": "AccountAttachmentCreateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, account_attachment=None, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachmentCreateResponse.account_attachment", "modulename": "strongdm.models", "qualname": "AccountAttachmentCreateResponse.account_attachment", "type": "variable", "doc": "<p>The created AccountAttachment.</p>\n"}, {"fullname": "strongdm.models.AccountAttachmentCreateResponse.meta", "modulename": "strongdm.models", "qualname": "AccountAttachmentCreateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.AccountAttachmentCreateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "AccountAttachmentCreateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.AccountAttachmentCreateResponse.to_dict", "modulename": "strongdm.models", "qualname": "AccountAttachmentCreateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachmentCreateResponse.from_dict", "modulename": "strongdm.models", "qualname": "AccountAttachmentCreateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachmentDeleteResponse", "modulename": "strongdm.models", "qualname": "AccountAttachmentDeleteResponse", "type": "class", "doc": "<p>AccountAttachmentDeleteResponse returns information about a AccountAttachment that was deleted.</p>\n"}, {"fullname": "strongdm.models.AccountAttachmentDeleteResponse.__init__", "modulename": "strongdm.models", "qualname": "AccountAttachmentDeleteResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachmentDeleteResponse.meta", "modulename": "strongdm.models", "qualname": "AccountAttachmentDeleteResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.AccountAttachmentDeleteResponse.rate_limit", "modulename": "strongdm.models", "qualname": "AccountAttachmentDeleteResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.AccountAttachmentDeleteResponse.to_dict", "modulename": "strongdm.models", "qualname": "AccountAttachmentDeleteResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachmentDeleteResponse.from_dict", "modulename": "strongdm.models", "qualname": "AccountAttachmentDeleteResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachmentGetResponse", "modulename": "strongdm.models", "qualname": "AccountAttachmentGetResponse", "type": "class", "doc": "<p>AccountAttachmentGetResponse returns a requested AccountAttachment.</p>\n"}, {"fullname": "strongdm.models.AccountAttachmentGetResponse.__init__", "modulename": "strongdm.models", "qualname": "AccountAttachmentGetResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, account_attachment=None, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachmentGetResponse.account_attachment", "modulename": "strongdm.models", "qualname": "AccountAttachmentGetResponse.account_attachment", "type": "variable", "doc": "<p>The requested AccountAttachment.</p>\n"}, {"fullname": "strongdm.models.AccountAttachmentGetResponse.meta", "modulename": "strongdm.models", "qualname": "AccountAttachmentGetResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.AccountAttachmentGetResponse.rate_limit", "modulename": "strongdm.models", "qualname": "AccountAttachmentGetResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.AccountAttachmentGetResponse.to_dict", "modulename": "strongdm.models", "qualname": "AccountAttachmentGetResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountAttachmentGetResponse.from_dict", "modulename": "strongdm.models", "qualname": "AccountAttachmentGetResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountCreateResponse", "modulename": "strongdm.models", "qualname": "AccountCreateResponse", "type": "class", "doc": "<p>AccountCreateResponse reports how the Accounts were created in the system.</p>\n"}, {"fullname": "strongdm.models.AccountCreateResponse.__init__", "modulename": "strongdm.models", "qualname": "AccountCreateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, account=None, meta=None, rate_limit=None, token=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountCreateResponse.account", "modulename": "strongdm.models", "qualname": "AccountCreateResponse.account", "type": "variable", "doc": "<p>The created Account.</p>\n"}, {"fullname": "strongdm.models.AccountCreateResponse.meta", "modulename": "strongdm.models", "qualname": "AccountCreateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.AccountCreateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "AccountCreateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.AccountCreateResponse.token", "modulename": "strongdm.models", "qualname": "AccountCreateResponse.token", "type": "variable", "doc": "<p>The auth token generated for the Account. The Account will use this token to\nauthenticate with the strongDM API.</p>\n"}, {"fullname": "strongdm.models.AccountCreateResponse.to_dict", "modulename": "strongdm.models", "qualname": "AccountCreateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountCreateResponse.from_dict", "modulename": "strongdm.models", "qualname": "AccountCreateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountDeleteResponse", "modulename": "strongdm.models", "qualname": "AccountDeleteResponse", "type": "class", "doc": "<p>AccountDeleteResponse returns information about a Account that was deleted.</p>\n"}, {"fullname": "strongdm.models.AccountDeleteResponse.__init__", "modulename": "strongdm.models", "qualname": "AccountDeleteResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountDeleteResponse.meta", "modulename": "strongdm.models", "qualname": "AccountDeleteResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.AccountDeleteResponse.rate_limit", "modulename": "strongdm.models", "qualname": "AccountDeleteResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.AccountDeleteResponse.to_dict", "modulename": "strongdm.models", "qualname": "AccountDeleteResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountDeleteResponse.from_dict", "modulename": "strongdm.models", "qualname": "AccountDeleteResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGetResponse", "modulename": "strongdm.models", "qualname": "AccountGetResponse", "type": "class", "doc": "<p>AccountGetResponse returns a requested Account.</p>\n"}, {"fullname": "strongdm.models.AccountGetResponse.__init__", "modulename": "strongdm.models", "qualname": "AccountGetResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, account=None, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGetResponse.account", "modulename": "strongdm.models", "qualname": "AccountGetResponse.account", "type": "variable", "doc": "<p>The requested Account.</p>\n"}, {"fullname": "strongdm.models.AccountGetResponse.meta", "modulename": "strongdm.models", "qualname": "AccountGetResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.AccountGetResponse.rate_limit", "modulename": "strongdm.models", "qualname": "AccountGetResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.AccountGetResponse.to_dict", "modulename": "strongdm.models", "qualname": "AccountGetResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGetResponse.from_dict", "modulename": "strongdm.models", "qualname": "AccountGetResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrant", "modulename": "strongdm.models", "qualname": "AccountGrant", "type": "class", "doc": "<p>AccountGrants connect a resource directly to an account, giving the account the permission to connect to that resource.</p>\n"}, {"fullname": "strongdm.models.AccountGrant.__init__", "modulename": "strongdm.models", "qualname": "AccountGrant.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    account_id=None,\n    id=None,\n    resource_id=None,\n    start_from=None,\n    valid_until=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrant.account_id", "modulename": "strongdm.models", "qualname": "AccountGrant.account_id", "type": "variable", "doc": "<p>The account ID of this AccountGrant.</p>\n"}, {"fullname": "strongdm.models.AccountGrant.id", "modulename": "strongdm.models", "qualname": "AccountGrant.id", "type": "variable", "doc": "<p>Unique identifier of the AccountGrant.</p>\n"}, {"fullname": "strongdm.models.AccountGrant.resource_id", "modulename": "strongdm.models", "qualname": "AccountGrant.resource_id", "type": "variable", "doc": "<p>The resource ID of this AccountGrant.</p>\n"}, {"fullname": "strongdm.models.AccountGrant.start_from", "modulename": "strongdm.models", "qualname": "AccountGrant.start_from", "type": "variable", "doc": "<p>The timestamp when the resource will be granted. When creating an AccountGrant, if this field is not specified, it will default to the current time.</p>\n"}, {"fullname": "strongdm.models.AccountGrant.valid_until", "modulename": "strongdm.models", "qualname": "AccountGrant.valid_until", "type": "variable", "doc": "<p>The timestamp when the resource grant will expire.</p>\n"}, {"fullname": "strongdm.models.AccountGrant.to_dict", "modulename": "strongdm.models", "qualname": "AccountGrant.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrant.from_dict", "modulename": "strongdm.models", "qualname": "AccountGrant.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrantCreateResponse", "modulename": "strongdm.models", "qualname": "AccountGrantCreateResponse", "type": "class", "doc": "<p>AccountGrantCreateResponse reports how the AccountGrants were created in the system.</p>\n"}, {"fullname": "strongdm.models.AccountGrantCreateResponse.__init__", "modulename": "strongdm.models", "qualname": "AccountGrantCreateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, account_grant=None, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrantCreateResponse.account_grant", "modulename": "strongdm.models", "qualname": "AccountGrantCreateResponse.account_grant", "type": "variable", "doc": "<p>The created AccountGrant.</p>\n"}, {"fullname": "strongdm.models.AccountGrantCreateResponse.meta", "modulename": "strongdm.models", "qualname": "AccountGrantCreateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.AccountGrantCreateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "AccountGrantCreateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.AccountGrantCreateResponse.to_dict", "modulename": "strongdm.models", "qualname": "AccountGrantCreateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrantCreateResponse.from_dict", "modulename": "strongdm.models", "qualname": "AccountGrantCreateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrantDeleteResponse", "modulename": "strongdm.models", "qualname": "AccountGrantDeleteResponse", "type": "class", "doc": "<p>AccountGrantDeleteResponse returns information about a AccountGrant that was deleted.</p>\n"}, {"fullname": "strongdm.models.AccountGrantDeleteResponse.__init__", "modulename": "strongdm.models", "qualname": "AccountGrantDeleteResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrantDeleteResponse.meta", "modulename": "strongdm.models", "qualname": "AccountGrantDeleteResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.AccountGrantDeleteResponse.rate_limit", "modulename": "strongdm.models", "qualname": "AccountGrantDeleteResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.AccountGrantDeleteResponse.to_dict", "modulename": "strongdm.models", "qualname": "AccountGrantDeleteResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrantDeleteResponse.from_dict", "modulename": "strongdm.models", "qualname": "AccountGrantDeleteResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrantGetResponse", "modulename": "strongdm.models", "qualname": "AccountGrantGetResponse", "type": "class", "doc": "<p>AccountGrantGetResponse returns a requested AccountGrant.</p>\n"}, {"fullname": "strongdm.models.AccountGrantGetResponse.__init__", "modulename": "strongdm.models", "qualname": "AccountGrantGetResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, account_grant=None, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrantGetResponse.account_grant", "modulename": "strongdm.models", "qualname": "AccountGrantGetResponse.account_grant", "type": "variable", "doc": "<p>The requested AccountGrant.</p>\n"}, {"fullname": "strongdm.models.AccountGrantGetResponse.meta", "modulename": "strongdm.models", "qualname": "AccountGrantGetResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.AccountGrantGetResponse.rate_limit", "modulename": "strongdm.models", "qualname": "AccountGrantGetResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.AccountGrantGetResponse.to_dict", "modulename": "strongdm.models", "qualname": "AccountGrantGetResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountGrantGetResponse.from_dict", "modulename": "strongdm.models", "qualname": "AccountGrantGetResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountUpdateResponse", "modulename": "strongdm.models", "qualname": "AccountUpdateResponse", "type": "class", "doc": "<p>AccountUpdateResponse returns the fields of a Account after it has been updated by\na AccountUpdateRequest.</p>\n"}, {"fullname": "strongdm.models.AccountUpdateResponse.__init__", "modulename": "strongdm.models", "qualname": "AccountUpdateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, account=None, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountUpdateResponse.account", "modulename": "strongdm.models", "qualname": "AccountUpdateResponse.account", "type": "variable", "doc": "<p>The updated Account.</p>\n"}, {"fullname": "strongdm.models.AccountUpdateResponse.meta", "modulename": "strongdm.models", "qualname": "AccountUpdateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.AccountUpdateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "AccountUpdateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.AccountUpdateResponse.to_dict", "modulename": "strongdm.models", "qualname": "AccountUpdateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AccountUpdateResponse.from_dict", "modulename": "strongdm.models", "qualname": "AccountUpdateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonEKS", "modulename": "strongdm.models", "qualname": "AmazonEKS", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKS.__init__", "modulename": "strongdm.models", "qualname": "AmazonEKS.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    access_key=None,\n    bind_interface=None,\n    certificate_authority=None,\n    cluster_name=None,\n    egress_filter=None,\n    endpoint=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    id=None,\n    name=None,\n    region=None,\n    remote_identity_group_id=None,\n    remote_identity_healthcheck_username=None,\n    role_arn=None,\n    role_external_id=None,\n    secret_access_key=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonEKS.access_key", "modulename": "strongdm.models", "qualname": "AmazonEKS.access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKS.bind_interface", "modulename": "strongdm.models", "qualname": "AmazonEKS.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AmazonEKS.certificate_authority", "modulename": "strongdm.models", "qualname": "AmazonEKS.certificate_authority", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKS.cluster_name", "modulename": "strongdm.models", "qualname": "AmazonEKS.cluster_name", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKS.egress_filter", "modulename": "strongdm.models", "qualname": "AmazonEKS.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AmazonEKS.endpoint", "modulename": "strongdm.models", "qualname": "AmazonEKS.endpoint", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKS.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "AmazonEKS.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.AmazonEKS.healthy", "modulename": "strongdm.models", "qualname": "AmazonEKS.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AmazonEKS.id", "modulename": "strongdm.models", "qualname": "AmazonEKS.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AmazonEKS.name", "modulename": "strongdm.models", "qualname": "AmazonEKS.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AmazonEKS.region", "modulename": "strongdm.models", "qualname": "AmazonEKS.region", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKS.remote_identity_group_id", "modulename": "strongdm.models", "qualname": "AmazonEKS.remote_identity_group_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKS.remote_identity_healthcheck_username", "modulename": "strongdm.models", "qualname": "AmazonEKS.remote_identity_healthcheck_username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKS.role_arn", "modulename": "strongdm.models", "qualname": "AmazonEKS.role_arn", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKS.role_external_id", "modulename": "strongdm.models", "qualname": "AmazonEKS.role_external_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKS.secret_access_key", "modulename": "strongdm.models", "qualname": "AmazonEKS.secret_access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKS.secret_store_id", "modulename": "strongdm.models", "qualname": "AmazonEKS.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AmazonEKS.tags", "modulename": "strongdm.models", "qualname": "AmazonEKS.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AmazonEKS.to_dict", "modulename": "strongdm.models", "qualname": "AmazonEKS.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonEKS.from_dict", "modulename": "strongdm.models", "qualname": "AmazonEKS.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.__init__", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    certificate_authority=None,\n    cluster_name=None,\n    egress_filter=None,\n    endpoint=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    id=None,\n    name=None,\n    region=None,\n    remote_identity_group_id=None,\n    remote_identity_healthcheck_username=None,\n    role_arn=None,\n    role_external_id=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.bind_interface", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.certificate_authority", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.certificate_authority", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.cluster_name", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.cluster_name", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.egress_filter", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.endpoint", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.endpoint", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.healthy", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.id", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.name", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.region", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.region", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.remote_identity_group_id", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.remote_identity_group_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.remote_identity_healthcheck_username", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.remote_identity_healthcheck_username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.role_arn", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.role_arn", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.role_external_id", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.role_external_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.secret_store_id", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.tags", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.to_dict", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonEKSInstanceProfile.from_dict", "modulename": "strongdm.models", "qualname": "AmazonEKSInstanceProfile.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.__init__", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    access_key=None,\n    bind_interface=None,\n    certificate_authority=None,\n    cluster_name=None,\n    egress_filter=None,\n    endpoint=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    id=None,\n    name=None,\n    region=None,\n    role_arn=None,\n    role_external_id=None,\n    secret_access_key=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.access_key", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.bind_interface", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.certificate_authority", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.certificate_authority", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.cluster_name", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.cluster_name", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.egress_filter", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.endpoint", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.endpoint", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.healthy", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.id", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.name", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.region", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.region", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.role_arn", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.role_arn", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.role_external_id", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.role_external_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.secret_access_key", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.secret_access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.secret_store_id", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.tags", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.to_dict", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonEKSUserImpersonation.from_dict", "modulename": "strongdm.models", "qualname": "AmazonEKSUserImpersonation.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonES", "modulename": "strongdm.models", "qualname": "AmazonES", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonES.__init__", "modulename": "strongdm.models", "qualname": "AmazonES.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    access_key=None,\n    bind_interface=None,\n    egress_filter=None,\n    endpoint=None,\n    healthy=None,\n    id=None,\n    name=None,\n    port_override=None,\n    region=None,\n    role_arn=None,\n    role_external_id=None,\n    secret_access_key=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonES.access_key", "modulename": "strongdm.models", "qualname": "AmazonES.access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonES.bind_interface", "modulename": "strongdm.models", "qualname": "AmazonES.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AmazonES.egress_filter", "modulename": "strongdm.models", "qualname": "AmazonES.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AmazonES.endpoint", "modulename": "strongdm.models", "qualname": "AmazonES.endpoint", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonES.healthy", "modulename": "strongdm.models", "qualname": "AmazonES.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AmazonES.id", "modulename": "strongdm.models", "qualname": "AmazonES.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AmazonES.name", "modulename": "strongdm.models", "qualname": "AmazonES.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AmazonES.port_override", "modulename": "strongdm.models", "qualname": "AmazonES.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonES.region", "modulename": "strongdm.models", "qualname": "AmazonES.region", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonES.role_arn", "modulename": "strongdm.models", "qualname": "AmazonES.role_arn", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonES.role_external_id", "modulename": "strongdm.models", "qualname": "AmazonES.role_external_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonES.secret_access_key", "modulename": "strongdm.models", "qualname": "AmazonES.secret_access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonES.secret_store_id", "modulename": "strongdm.models", "qualname": "AmazonES.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AmazonES.tags", "modulename": "strongdm.models", "qualname": "AmazonES.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AmazonES.to_dict", "modulename": "strongdm.models", "qualname": "AmazonES.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonES.from_dict", "modulename": "strongdm.models", "qualname": "AmazonES.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonMQAMQP091", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.__init__", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonMQAMQP091.bind_interface", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.egress_filter", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.healthy", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.hostname", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.id", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.name", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.password", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.port", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.port_override", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.secret_store_id", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.tags", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.tls_required", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.username", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AmazonMQAMQP091.to_dict", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AmazonMQAMQP091.from_dict", "modulename": "strongdm.models", "qualname": "AmazonMQAMQP091.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Athena", "modulename": "strongdm.models", "qualname": "Athena", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Athena.__init__", "modulename": "strongdm.models", "qualname": "Athena.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    access_key=None,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    id=None,\n    name=None,\n    output=None,\n    port_override=None,\n    region=None,\n    role_arn=None,\n    role_external_id=None,\n    secret_access_key=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Athena.access_key", "modulename": "strongdm.models", "qualname": "Athena.access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Athena.bind_interface", "modulename": "strongdm.models", "qualname": "Athena.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Athena.egress_filter", "modulename": "strongdm.models", "qualname": "Athena.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Athena.healthy", "modulename": "strongdm.models", "qualname": "Athena.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Athena.id", "modulename": "strongdm.models", "qualname": "Athena.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Athena.name", "modulename": "strongdm.models", "qualname": "Athena.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Athena.output", "modulename": "strongdm.models", "qualname": "Athena.output", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Athena.port_override", "modulename": "strongdm.models", "qualname": "Athena.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Athena.region", "modulename": "strongdm.models", "qualname": "Athena.region", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Athena.role_arn", "modulename": "strongdm.models", "qualname": "Athena.role_arn", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Athena.role_external_id", "modulename": "strongdm.models", "qualname": "Athena.role_external_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Athena.secret_access_key", "modulename": "strongdm.models", "qualname": "Athena.secret_access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Athena.secret_store_id", "modulename": "strongdm.models", "qualname": "Athena.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Athena.tags", "modulename": "strongdm.models", "qualname": "Athena.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Athena.to_dict", "modulename": "strongdm.models", "qualname": "Athena.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Athena.from_dict", "modulename": "strongdm.models", "qualname": "Athena.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AuroraMysql", "modulename": "strongdm.models", "qualname": "AuroraMysql", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraMysql.__init__", "modulename": "strongdm.models", "qualname": "AuroraMysql.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AuroraMysql.bind_interface", "modulename": "strongdm.models", "qualname": "AuroraMysql.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AuroraMysql.database", "modulename": "strongdm.models", "qualname": "AuroraMysql.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraMysql.egress_filter", "modulename": "strongdm.models", "qualname": "AuroraMysql.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AuroraMysql.healthy", "modulename": "strongdm.models", "qualname": "AuroraMysql.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AuroraMysql.hostname", "modulename": "strongdm.models", "qualname": "AuroraMysql.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraMysql.id", "modulename": "strongdm.models", "qualname": "AuroraMysql.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AuroraMysql.name", "modulename": "strongdm.models", "qualname": "AuroraMysql.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AuroraMysql.password", "modulename": "strongdm.models", "qualname": "AuroraMysql.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraMysql.port", "modulename": "strongdm.models", "qualname": "AuroraMysql.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraMysql.port_override", "modulename": "strongdm.models", "qualname": "AuroraMysql.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraMysql.secret_store_id", "modulename": "strongdm.models", "qualname": "AuroraMysql.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AuroraMysql.tags", "modulename": "strongdm.models", "qualname": "AuroraMysql.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AuroraMysql.username", "modulename": "strongdm.models", "qualname": "AuroraMysql.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraMysql.to_dict", "modulename": "strongdm.models", "qualname": "AuroraMysql.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AuroraMysql.from_dict", "modulename": "strongdm.models", "qualname": "AuroraMysql.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AuroraPostgres", "modulename": "strongdm.models", "qualname": "AuroraPostgres", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.__init__", "modulename": "strongdm.models", "qualname": "AuroraPostgres.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    override_database=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AuroraPostgres.bind_interface", "modulename": "strongdm.models", "qualname": "AuroraPostgres.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.database", "modulename": "strongdm.models", "qualname": "AuroraPostgres.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.egress_filter", "modulename": "strongdm.models", "qualname": "AuroraPostgres.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.healthy", "modulename": "strongdm.models", "qualname": "AuroraPostgres.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.hostname", "modulename": "strongdm.models", "qualname": "AuroraPostgres.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.id", "modulename": "strongdm.models", "qualname": "AuroraPostgres.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.name", "modulename": "strongdm.models", "qualname": "AuroraPostgres.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.override_database", "modulename": "strongdm.models", "qualname": "AuroraPostgres.override_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.password", "modulename": "strongdm.models", "qualname": "AuroraPostgres.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.port", "modulename": "strongdm.models", "qualname": "AuroraPostgres.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.port_override", "modulename": "strongdm.models", "qualname": "AuroraPostgres.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.secret_store_id", "modulename": "strongdm.models", "qualname": "AuroraPostgres.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.tags", "modulename": "strongdm.models", "qualname": "AuroraPostgres.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.username", "modulename": "strongdm.models", "qualname": "AuroraPostgres.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AuroraPostgres.to_dict", "modulename": "strongdm.models", "qualname": "AuroraPostgres.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AuroraPostgres.from_dict", "modulename": "strongdm.models", "qualname": "AuroraPostgres.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Azure", "modulename": "strongdm.models", "qualname": "Azure", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Azure.__init__", "modulename": "strongdm.models", "qualname": "Azure.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    app_id=None,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    id=None,\n    name=None,\n    password=None,\n    secret_store_id=None,\n    tags=None,\n    tenant_id=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Azure.app_id", "modulename": "strongdm.models", "qualname": "Azure.app_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Azure.bind_interface", "modulename": "strongdm.models", "qualname": "Azure.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Azure.egress_filter", "modulename": "strongdm.models", "qualname": "Azure.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Azure.healthy", "modulename": "strongdm.models", "qualname": "Azure.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Azure.id", "modulename": "strongdm.models", "qualname": "Azure.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Azure.name", "modulename": "strongdm.models", "qualname": "Azure.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Azure.password", "modulename": "strongdm.models", "qualname": "Azure.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Azure.secret_store_id", "modulename": "strongdm.models", "qualname": "Azure.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Azure.tags", "modulename": "strongdm.models", "qualname": "Azure.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Azure.tenant_id", "modulename": "strongdm.models", "qualname": "Azure.tenant_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Azure.to_dict", "modulename": "strongdm.models", "qualname": "Azure.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Azure.from_dict", "modulename": "strongdm.models", "qualname": "Azure.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AzureCertificate", "modulename": "strongdm.models", "qualname": "AzureCertificate", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureCertificate.__init__", "modulename": "strongdm.models", "qualname": "AzureCertificate.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    app_id=None,\n    bind_interface=None,\n    client_certificate=None,\n    egress_filter=None,\n    healthy=None,\n    id=None,\n    name=None,\n    secret_store_id=None,\n    tags=None,\n    tenant_id=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AzureCertificate.app_id", "modulename": "strongdm.models", "qualname": "AzureCertificate.app_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureCertificate.bind_interface", "modulename": "strongdm.models", "qualname": "AzureCertificate.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AzureCertificate.client_certificate", "modulename": "strongdm.models", "qualname": "AzureCertificate.client_certificate", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureCertificate.egress_filter", "modulename": "strongdm.models", "qualname": "AzureCertificate.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AzureCertificate.healthy", "modulename": "strongdm.models", "qualname": "AzureCertificate.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AzureCertificate.id", "modulename": "strongdm.models", "qualname": "AzureCertificate.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AzureCertificate.name", "modulename": "strongdm.models", "qualname": "AzureCertificate.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AzureCertificate.secret_store_id", "modulename": "strongdm.models", "qualname": "AzureCertificate.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AzureCertificate.tags", "modulename": "strongdm.models", "qualname": "AzureCertificate.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AzureCertificate.tenant_id", "modulename": "strongdm.models", "qualname": "AzureCertificate.tenant_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureCertificate.to_dict", "modulename": "strongdm.models", "qualname": "AzureCertificate.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AzureCertificate.from_dict", "modulename": "strongdm.models", "qualname": "AzureCertificate.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AzureMysql", "modulename": "strongdm.models", "qualname": "AzureMysql", "type": "class", "doc": "<p>AzureMysql is currently unstable, and its API may change, or it may be removed,\nwithout a major version bump.</p>\n"}, {"fullname": "strongdm.models.AzureMysql.__init__", "modulename": "strongdm.models", "qualname": "AzureMysql.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AzureMysql.bind_interface", "modulename": "strongdm.models", "qualname": "AzureMysql.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AzureMysql.database", "modulename": "strongdm.models", "qualname": "AzureMysql.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureMysql.egress_filter", "modulename": "strongdm.models", "qualname": "AzureMysql.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AzureMysql.healthy", "modulename": "strongdm.models", "qualname": "AzureMysql.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AzureMysql.hostname", "modulename": "strongdm.models", "qualname": "AzureMysql.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureMysql.id", "modulename": "strongdm.models", "qualname": "AzureMysql.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AzureMysql.name", "modulename": "strongdm.models", "qualname": "AzureMysql.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AzureMysql.password", "modulename": "strongdm.models", "qualname": "AzureMysql.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureMysql.port", "modulename": "strongdm.models", "qualname": "AzureMysql.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureMysql.port_override", "modulename": "strongdm.models", "qualname": "AzureMysql.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureMysql.secret_store_id", "modulename": "strongdm.models", "qualname": "AzureMysql.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AzureMysql.tags", "modulename": "strongdm.models", "qualname": "AzureMysql.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AzureMysql.username", "modulename": "strongdm.models", "qualname": "AzureMysql.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureMysql.to_dict", "modulename": "strongdm.models", "qualname": "AzureMysql.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AzureMysql.from_dict", "modulename": "strongdm.models", "qualname": "AzureMysql.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AzurePostgres", "modulename": "strongdm.models", "qualname": "AzurePostgres", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzurePostgres.__init__", "modulename": "strongdm.models", "qualname": "AzurePostgres.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    override_database=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.AzurePostgres.bind_interface", "modulename": "strongdm.models", "qualname": "AzurePostgres.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.AzurePostgres.database", "modulename": "strongdm.models", "qualname": "AzurePostgres.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzurePostgres.egress_filter", "modulename": "strongdm.models", "qualname": "AzurePostgres.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.AzurePostgres.healthy", "modulename": "strongdm.models", "qualname": "AzurePostgres.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.AzurePostgres.hostname", "modulename": "strongdm.models", "qualname": "AzurePostgres.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzurePostgres.id", "modulename": "strongdm.models", "qualname": "AzurePostgres.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.AzurePostgres.name", "modulename": "strongdm.models", "qualname": "AzurePostgres.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.AzurePostgres.override_database", "modulename": "strongdm.models", "qualname": "AzurePostgres.override_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzurePostgres.password", "modulename": "strongdm.models", "qualname": "AzurePostgres.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzurePostgres.port", "modulename": "strongdm.models", "qualname": "AzurePostgres.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzurePostgres.port_override", "modulename": "strongdm.models", "qualname": "AzurePostgres.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzurePostgres.secret_store_id", "modulename": "strongdm.models", "qualname": "AzurePostgres.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.AzurePostgres.tags", "modulename": "strongdm.models", "qualname": "AzurePostgres.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AzurePostgres.username", "modulename": "strongdm.models", "qualname": "AzurePostgres.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzurePostgres.to_dict", "modulename": "strongdm.models", "qualname": "AzurePostgres.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AzurePostgres.from_dict", "modulename": "strongdm.models", "qualname": "AzurePostgres.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.AzureStore", "modulename": "strongdm.models", "qualname": "AzureStore", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureStore.__init__", "modulename": "strongdm.models", "qualname": "AzureStore.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, id=None, name=None, tags=None, vault_uri=None)", "funcdef": "def"}, {"fullname": "strongdm.models.AzureStore.id", "modulename": "strongdm.models", "qualname": "AzureStore.id", "type": "variable", "doc": "<p>Unique identifier of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.AzureStore.name", "modulename": "strongdm.models", "qualname": "AzureStore.name", "type": "variable", "doc": "<p>Unique human-readable name of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.AzureStore.tags", "modulename": "strongdm.models", "qualname": "AzureStore.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.AzureStore.vault_uri", "modulename": "strongdm.models", "qualname": "AzureStore.vault_uri", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.AzureStore.to_dict", "modulename": "strongdm.models", "qualname": "AzureStore.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.AzureStore.from_dict", "modulename": "strongdm.models", "qualname": "AzureStore.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.BigQuery", "modulename": "strongdm.models", "qualname": "BigQuery", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.BigQuery.__init__", "modulename": "strongdm.models", "qualname": "BigQuery.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    endpoint=None,\n    healthy=None,\n    id=None,\n    name=None,\n    port_override=None,\n    private_key=None,\n    project=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.BigQuery.bind_interface", "modulename": "strongdm.models", "qualname": "BigQuery.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.BigQuery.egress_filter", "modulename": "strongdm.models", "qualname": "BigQuery.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.BigQuery.endpoint", "modulename": "strongdm.models", "qualname": "BigQuery.endpoint", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.BigQuery.healthy", "modulename": "strongdm.models", "qualname": "BigQuery.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.BigQuery.id", "modulename": "strongdm.models", "qualname": "BigQuery.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.BigQuery.name", "modulename": "strongdm.models", "qualname": "BigQuery.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.BigQuery.port_override", "modulename": "strongdm.models", "qualname": "BigQuery.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.BigQuery.private_key", "modulename": "strongdm.models", "qualname": "BigQuery.private_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.BigQuery.project", "modulename": "strongdm.models", "qualname": "BigQuery.project", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.BigQuery.secret_store_id", "modulename": "strongdm.models", "qualname": "BigQuery.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.BigQuery.tags", "modulename": "strongdm.models", "qualname": "BigQuery.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.BigQuery.username", "modulename": "strongdm.models", "qualname": "BigQuery.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.BigQuery.to_dict", "modulename": "strongdm.models", "qualname": "BigQuery.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.BigQuery.from_dict", "modulename": "strongdm.models", "qualname": "BigQuery.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Cassandra", "modulename": "strongdm.models", "qualname": "Cassandra", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cassandra.__init__", "modulename": "strongdm.models", "qualname": "Cassandra.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Cassandra.bind_interface", "modulename": "strongdm.models", "qualname": "Cassandra.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Cassandra.egress_filter", "modulename": "strongdm.models", "qualname": "Cassandra.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Cassandra.healthy", "modulename": "strongdm.models", "qualname": "Cassandra.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Cassandra.hostname", "modulename": "strongdm.models", "qualname": "Cassandra.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cassandra.id", "modulename": "strongdm.models", "qualname": "Cassandra.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Cassandra.name", "modulename": "strongdm.models", "qualname": "Cassandra.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Cassandra.password", "modulename": "strongdm.models", "qualname": "Cassandra.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cassandra.port", "modulename": "strongdm.models", "qualname": "Cassandra.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cassandra.port_override", "modulename": "strongdm.models", "qualname": "Cassandra.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cassandra.secret_store_id", "modulename": "strongdm.models", "qualname": "Cassandra.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Cassandra.tags", "modulename": "strongdm.models", "qualname": "Cassandra.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Cassandra.tls_required", "modulename": "strongdm.models", "qualname": "Cassandra.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cassandra.username", "modulename": "strongdm.models", "qualname": "Cassandra.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cassandra.to_dict", "modulename": "strongdm.models", "qualname": "Cassandra.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Cassandra.from_dict", "modulename": "strongdm.models", "qualname": "Cassandra.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Citus", "modulename": "strongdm.models", "qualname": "Citus", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Citus.__init__", "modulename": "strongdm.models", "qualname": "Citus.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    override_database=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Citus.bind_interface", "modulename": "strongdm.models", "qualname": "Citus.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Citus.database", "modulename": "strongdm.models", "qualname": "Citus.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Citus.egress_filter", "modulename": "strongdm.models", "qualname": "Citus.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Citus.healthy", "modulename": "strongdm.models", "qualname": "Citus.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Citus.hostname", "modulename": "strongdm.models", "qualname": "Citus.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Citus.id", "modulename": "strongdm.models", "qualname": "Citus.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Citus.name", "modulename": "strongdm.models", "qualname": "Citus.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Citus.override_database", "modulename": "strongdm.models", "qualname": "Citus.override_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Citus.password", "modulename": "strongdm.models", "qualname": "Citus.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Citus.port", "modulename": "strongdm.models", "qualname": "Citus.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Citus.port_override", "modulename": "strongdm.models", "qualname": "Citus.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Citus.secret_store_id", "modulename": "strongdm.models", "qualname": "Citus.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Citus.tags", "modulename": "strongdm.models", "qualname": "Citus.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Citus.username", "modulename": "strongdm.models", "qualname": "Citus.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Citus.to_dict", "modulename": "strongdm.models", "qualname": "Citus.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Citus.from_dict", "modulename": "strongdm.models", "qualname": "Citus.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Clustrix", "modulename": "strongdm.models", "qualname": "Clustrix", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Clustrix.__init__", "modulename": "strongdm.models", "qualname": "Clustrix.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Clustrix.bind_interface", "modulename": "strongdm.models", "qualname": "Clustrix.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Clustrix.database", "modulename": "strongdm.models", "qualname": "Clustrix.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Clustrix.egress_filter", "modulename": "strongdm.models", "qualname": "Clustrix.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Clustrix.healthy", "modulename": "strongdm.models", "qualname": "Clustrix.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Clustrix.hostname", "modulename": "strongdm.models", "qualname": "Clustrix.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Clustrix.id", "modulename": "strongdm.models", "qualname": "Clustrix.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Clustrix.name", "modulename": "strongdm.models", "qualname": "Clustrix.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Clustrix.password", "modulename": "strongdm.models", "qualname": "Clustrix.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Clustrix.port", "modulename": "strongdm.models", "qualname": "Clustrix.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Clustrix.port_override", "modulename": "strongdm.models", "qualname": "Clustrix.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Clustrix.secret_store_id", "modulename": "strongdm.models", "qualname": "Clustrix.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Clustrix.tags", "modulename": "strongdm.models", "qualname": "Clustrix.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Clustrix.username", "modulename": "strongdm.models", "qualname": "Clustrix.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Clustrix.to_dict", "modulename": "strongdm.models", "qualname": "Clustrix.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Clustrix.from_dict", "modulename": "strongdm.models", "qualname": "Clustrix.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Cockroach", "modulename": "strongdm.models", "qualname": "Cockroach", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cockroach.__init__", "modulename": "strongdm.models", "qualname": "Cockroach.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    override_database=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Cockroach.bind_interface", "modulename": "strongdm.models", "qualname": "Cockroach.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Cockroach.database", "modulename": "strongdm.models", "qualname": "Cockroach.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cockroach.egress_filter", "modulename": "strongdm.models", "qualname": "Cockroach.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Cockroach.healthy", "modulename": "strongdm.models", "qualname": "Cockroach.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Cockroach.hostname", "modulename": "strongdm.models", "qualname": "Cockroach.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cockroach.id", "modulename": "strongdm.models", "qualname": "Cockroach.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Cockroach.name", "modulename": "strongdm.models", "qualname": "Cockroach.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Cockroach.override_database", "modulename": "strongdm.models", "qualname": "Cockroach.override_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cockroach.password", "modulename": "strongdm.models", "qualname": "Cockroach.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cockroach.port", "modulename": "strongdm.models", "qualname": "Cockroach.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cockroach.port_override", "modulename": "strongdm.models", "qualname": "Cockroach.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cockroach.secret_store_id", "modulename": "strongdm.models", "qualname": "Cockroach.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Cockroach.tags", "modulename": "strongdm.models", "qualname": "Cockroach.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Cockroach.username", "modulename": "strongdm.models", "qualname": "Cockroach.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Cockroach.to_dict", "modulename": "strongdm.models", "qualname": "Cockroach.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Cockroach.from_dict", "modulename": "strongdm.models", "qualname": "Cockroach.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.ControlPanelGetSSHCAPublicKeyResponse", "modulename": "strongdm.models", "qualname": "ControlPanelGetSSHCAPublicKeyResponse", "type": "class", "doc": "<p>ControlPanelGetSSHCAPublicKeyResponse represents a request for an\norganization's SSH Certificate Authority public key.</p>\n"}, {"fullname": "strongdm.models.ControlPanelGetSSHCAPublicKeyResponse.__init__", "modulename": "strongdm.models", "qualname": "ControlPanelGetSSHCAPublicKeyResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, public_key=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.ControlPanelGetSSHCAPublicKeyResponse.meta", "modulename": "strongdm.models", "qualname": "ControlPanelGetSSHCAPublicKeyResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.ControlPanelGetSSHCAPublicKeyResponse.public_key", "modulename": "strongdm.models", "qualname": "ControlPanelGetSSHCAPublicKeyResponse.public_key", "type": "variable", "doc": "<p>The public key of the SSH Certificate Authority, in OpenSSH RSA public\nkey format.</p>\n"}, {"fullname": "strongdm.models.ControlPanelGetSSHCAPublicKeyResponse.rate_limit", "modulename": "strongdm.models", "qualname": "ControlPanelGetSSHCAPublicKeyResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.ControlPanelGetSSHCAPublicKeyResponse.to_dict", "modulename": "strongdm.models", "qualname": "ControlPanelGetSSHCAPublicKeyResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.ControlPanelGetSSHCAPublicKeyResponse.from_dict", "modulename": "strongdm.models", "qualname": "ControlPanelGetSSHCAPublicKeyResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.ControlPanelVerifyJWTResponse", "modulename": "strongdm.models", "qualname": "ControlPanelVerifyJWTResponse", "type": "class", "doc": "<p>ControlPanelVerifyJWTResponse reports whether x-sdm-token is valid.</p>\n"}, {"fullname": "strongdm.models.ControlPanelVerifyJWTResponse.__init__", "modulename": "strongdm.models", "qualname": "ControlPanelVerifyJWTResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, valid=None)", "funcdef": "def"}, {"fullname": "strongdm.models.ControlPanelVerifyJWTResponse.meta", "modulename": "strongdm.models", "qualname": "ControlPanelVerifyJWTResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.ControlPanelVerifyJWTResponse.rate_limit", "modulename": "strongdm.models", "qualname": "ControlPanelVerifyJWTResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.ControlPanelVerifyJWTResponse.valid", "modulename": "strongdm.models", "qualname": "ControlPanelVerifyJWTResponse.valid", "type": "variable", "doc": "<p>Reports if the given token is valid.</p>\n"}, {"fullname": "strongdm.models.ControlPanelVerifyJWTResponse.to_dict", "modulename": "strongdm.models", "qualname": "ControlPanelVerifyJWTResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.ControlPanelVerifyJWTResponse.from_dict", "modulename": "strongdm.models", "qualname": "ControlPanelVerifyJWTResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.CreateResponseMetadata", "modulename": "strongdm.models", "qualname": "CreateResponseMetadata", "type": "class", "doc": "<p>CreateResponseMetadata is reserved for future use.</p>\n"}, {"fullname": "strongdm.models.CreateResponseMetadata.__init__", "modulename": "strongdm.models", "qualname": "CreateResponseMetadata.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.CreateResponseMetadata.to_dict", "modulename": "strongdm.models", "qualname": "CreateResponseMetadata.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.CreateResponseMetadata.from_dict", "modulename": "strongdm.models", "qualname": "CreateResponseMetadata.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.CyberarkConjurStore", "modulename": "strongdm.models", "qualname": "CyberarkConjurStore", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.CyberarkConjurStore.__init__", "modulename": "strongdm.models", "qualname": "CyberarkConjurStore.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, appurl=None, id=None, name=None, tags=None)", "funcdef": "def"}, {"fullname": "strongdm.models.CyberarkConjurStore.appurl", "modulename": "strongdm.models", "qualname": "CyberarkConjurStore.appurl", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.CyberarkConjurStore.id", "modulename": "strongdm.models", "qualname": "CyberarkConjurStore.id", "type": "variable", "doc": "<p>Unique identifier of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.CyberarkConjurStore.name", "modulename": "strongdm.models", "qualname": "CyberarkConjurStore.name", "type": "variable", "doc": "<p>Unique human-readable name of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.CyberarkConjurStore.tags", "modulename": "strongdm.models", "qualname": "CyberarkConjurStore.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.CyberarkConjurStore.to_dict", "modulename": "strongdm.models", "qualname": "CyberarkConjurStore.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.CyberarkConjurStore.from_dict", "modulename": "strongdm.models", "qualname": "CyberarkConjurStore.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.CyberarkPAMExperimentalStore", "modulename": "strongdm.models", "qualname": "CyberarkPAMExperimentalStore", "type": "class", "doc": "<p>CyberarkPAMExperimentalStore is currently unstable, and its API may change, or it may be removed,\nwithout a major version bump.</p>\n"}, {"fullname": "strongdm.models.CyberarkPAMExperimentalStore.__init__", "modulename": "strongdm.models", "qualname": "CyberarkPAMExperimentalStore.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, appurl=None, id=None, name=None, tags=None)", "funcdef": "def"}, {"fullname": "strongdm.models.CyberarkPAMExperimentalStore.appurl", "modulename": "strongdm.models", "qualname": "CyberarkPAMExperimentalStore.appurl", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.CyberarkPAMExperimentalStore.id", "modulename": "strongdm.models", "qualname": "CyberarkPAMExperimentalStore.id", "type": "variable", "doc": "<p>Unique identifier of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.CyberarkPAMExperimentalStore.name", "modulename": "strongdm.models", "qualname": "CyberarkPAMExperimentalStore.name", "type": "variable", "doc": "<p>Unique human-readable name of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.CyberarkPAMExperimentalStore.tags", "modulename": "strongdm.models", "qualname": "CyberarkPAMExperimentalStore.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.CyberarkPAMExperimentalStore.to_dict", "modulename": "strongdm.models", "qualname": "CyberarkPAMExperimentalStore.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.CyberarkPAMExperimentalStore.from_dict", "modulename": "strongdm.models", "qualname": "CyberarkPAMExperimentalStore.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.CyberarkPAMStore", "modulename": "strongdm.models", "qualname": "CyberarkPAMStore", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.CyberarkPAMStore.__init__", "modulename": "strongdm.models", "qualname": "CyberarkPAMStore.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, appurl=None, id=None, name=None, tags=None)", "funcdef": "def"}, {"fullname": "strongdm.models.CyberarkPAMStore.appurl", "modulename": "strongdm.models", "qualname": "CyberarkPAMStore.appurl", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.CyberarkPAMStore.id", "modulename": "strongdm.models", "qualname": "CyberarkPAMStore.id", "type": "variable", "doc": "<p>Unique identifier of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.CyberarkPAMStore.name", "modulename": "strongdm.models", "qualname": "CyberarkPAMStore.name", "type": "variable", "doc": "<p>Unique human-readable name of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.CyberarkPAMStore.tags", "modulename": "strongdm.models", "qualname": "CyberarkPAMStore.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.CyberarkPAMStore.to_dict", "modulename": "strongdm.models", "qualname": "CyberarkPAMStore.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.CyberarkPAMStore.from_dict", "modulename": "strongdm.models", "qualname": "CyberarkPAMStore.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.DB2I", "modulename": "strongdm.models", "qualname": "DB2I", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2I.__init__", "modulename": "strongdm.models", "qualname": "DB2I.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.DB2I.bind_interface", "modulename": "strongdm.models", "qualname": "DB2I.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.DB2I.egress_filter", "modulename": "strongdm.models", "qualname": "DB2I.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.DB2I.healthy", "modulename": "strongdm.models", "qualname": "DB2I.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.DB2I.hostname", "modulename": "strongdm.models", "qualname": "DB2I.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2I.id", "modulename": "strongdm.models", "qualname": "DB2I.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.DB2I.name", "modulename": "strongdm.models", "qualname": "DB2I.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.DB2I.password", "modulename": "strongdm.models", "qualname": "DB2I.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2I.port", "modulename": "strongdm.models", "qualname": "DB2I.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2I.port_override", "modulename": "strongdm.models", "qualname": "DB2I.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2I.secret_store_id", "modulename": "strongdm.models", "qualname": "DB2I.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.DB2I.tags", "modulename": "strongdm.models", "qualname": "DB2I.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.DB2I.tls_required", "modulename": "strongdm.models", "qualname": "DB2I.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2I.username", "modulename": "strongdm.models", "qualname": "DB2I.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2I.to_dict", "modulename": "strongdm.models", "qualname": "DB2I.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.DB2I.from_dict", "modulename": "strongdm.models", "qualname": "DB2I.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.DB2LUW", "modulename": "strongdm.models", "qualname": "DB2LUW", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2LUW.__init__", "modulename": "strongdm.models", "qualname": "DB2LUW.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.DB2LUW.bind_interface", "modulename": "strongdm.models", "qualname": "DB2LUW.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.DB2LUW.database", "modulename": "strongdm.models", "qualname": "DB2LUW.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2LUW.egress_filter", "modulename": "strongdm.models", "qualname": "DB2LUW.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.DB2LUW.healthy", "modulename": "strongdm.models", "qualname": "DB2LUW.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.DB2LUW.hostname", "modulename": "strongdm.models", "qualname": "DB2LUW.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2LUW.id", "modulename": "strongdm.models", "qualname": "DB2LUW.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.DB2LUW.name", "modulename": "strongdm.models", "qualname": "DB2LUW.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.DB2LUW.password", "modulename": "strongdm.models", "qualname": "DB2LUW.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2LUW.port", "modulename": "strongdm.models", "qualname": "DB2LUW.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2LUW.port_override", "modulename": "strongdm.models", "qualname": "DB2LUW.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2LUW.secret_store_id", "modulename": "strongdm.models", "qualname": "DB2LUW.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.DB2LUW.tags", "modulename": "strongdm.models", "qualname": "DB2LUW.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.DB2LUW.username", "modulename": "strongdm.models", "qualname": "DB2LUW.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DB2LUW.to_dict", "modulename": "strongdm.models", "qualname": "DB2LUW.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.DB2LUW.from_dict", "modulename": "strongdm.models", "qualname": "DB2LUW.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.DeleteResponseMetadata", "modulename": "strongdm.models", "qualname": "DeleteResponseMetadata", "type": "class", "doc": "<p>DeleteResponseMetadata is reserved for future use.</p>\n"}, {"fullname": "strongdm.models.DeleteResponseMetadata.__init__", "modulename": "strongdm.models", "qualname": "DeleteResponseMetadata.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.DeleteResponseMetadata.to_dict", "modulename": "strongdm.models", "qualname": "DeleteResponseMetadata.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.DeleteResponseMetadata.from_dict", "modulename": "strongdm.models", "qualname": "DeleteResponseMetadata.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.DelineaStore", "modulename": "strongdm.models", "qualname": "DelineaStore", "type": "class", "doc": "<p>DelineaStore is currently unstable, and its API may change, or it may be removed,\nwithout a major version bump.</p>\n"}, {"fullname": "strongdm.models.DelineaStore.__init__", "modulename": "strongdm.models", "qualname": "DelineaStore.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    id=None,\n    name=None,\n    server_url=None,\n    tags=None,\n    tenant_name=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.DelineaStore.id", "modulename": "strongdm.models", "qualname": "DelineaStore.id", "type": "variable", "doc": "<p>Unique identifier of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.DelineaStore.name", "modulename": "strongdm.models", "qualname": "DelineaStore.name", "type": "variable", "doc": "<p>Unique human-readable name of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.DelineaStore.server_url", "modulename": "strongdm.models", "qualname": "DelineaStore.server_url", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DelineaStore.tags", "modulename": "strongdm.models", "qualname": "DelineaStore.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.DelineaStore.tenant_name", "modulename": "strongdm.models", "qualname": "DelineaStore.tenant_name", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DelineaStore.to_dict", "modulename": "strongdm.models", "qualname": "DelineaStore.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.DelineaStore.from_dict", "modulename": "strongdm.models", "qualname": "DelineaStore.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.DocumentDBHost", "modulename": "strongdm.models", "qualname": "DocumentDBHost", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.__init__", "modulename": "strongdm.models", "qualname": "DocumentDBHost.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    auth_database=None,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.DocumentDBHost.auth_database", "modulename": "strongdm.models", "qualname": "DocumentDBHost.auth_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.bind_interface", "modulename": "strongdm.models", "qualname": "DocumentDBHost.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.egress_filter", "modulename": "strongdm.models", "qualname": "DocumentDBHost.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.healthy", "modulename": "strongdm.models", "qualname": "DocumentDBHost.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.hostname", "modulename": "strongdm.models", "qualname": "DocumentDBHost.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.id", "modulename": "strongdm.models", "qualname": "DocumentDBHost.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.name", "modulename": "strongdm.models", "qualname": "DocumentDBHost.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.password", "modulename": "strongdm.models", "qualname": "DocumentDBHost.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.port", "modulename": "strongdm.models", "qualname": "DocumentDBHost.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.port_override", "modulename": "strongdm.models", "qualname": "DocumentDBHost.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.secret_store_id", "modulename": "strongdm.models", "qualname": "DocumentDBHost.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.tags", "modulename": "strongdm.models", "qualname": "DocumentDBHost.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.username", "modulename": "strongdm.models", "qualname": "DocumentDBHost.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBHost.to_dict", "modulename": "strongdm.models", "qualname": "DocumentDBHost.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.DocumentDBHost.from_dict", "modulename": "strongdm.models", "qualname": "DocumentDBHost.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.DocumentDBReplicaSet", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.__init__", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    auth_database=None,\n    bind_interface=None,\n    connect_to_replica=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port_override=None,\n    replica_set=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.auth_database", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.auth_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.bind_interface", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.connect_to_replica", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.connect_to_replica", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.egress_filter", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.healthy", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.hostname", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.hostname", "type": "variable", "doc": "<p>Hostname must contain the hostname/port pairs of all instances in the replica set separated by commas.</p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.id", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.name", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.password", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.port_override", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.replica_set", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.replica_set", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.secret_store_id", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.tags", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.username", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.to_dict", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.DocumentDBReplicaSet.from_dict", "modulename": "strongdm.models", "qualname": "DocumentDBReplicaSet.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Druid", "modulename": "strongdm.models", "qualname": "Druid", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Druid.__init__", "modulename": "strongdm.models", "qualname": "Druid.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Druid.bind_interface", "modulename": "strongdm.models", "qualname": "Druid.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Druid.egress_filter", "modulename": "strongdm.models", "qualname": "Druid.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Druid.healthy", "modulename": "strongdm.models", "qualname": "Druid.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Druid.hostname", "modulename": "strongdm.models", "qualname": "Druid.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Druid.id", "modulename": "strongdm.models", "qualname": "Druid.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Druid.name", "modulename": "strongdm.models", "qualname": "Druid.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Druid.password", "modulename": "strongdm.models", "qualname": "Druid.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Druid.port", "modulename": "strongdm.models", "qualname": "Druid.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Druid.port_override", "modulename": "strongdm.models", "qualname": "Druid.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Druid.secret_store_id", "modulename": "strongdm.models", "qualname": "Druid.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Druid.tags", "modulename": "strongdm.models", "qualname": "Druid.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Druid.username", "modulename": "strongdm.models", "qualname": "Druid.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Druid.to_dict", "modulename": "strongdm.models", "qualname": "Druid.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Druid.from_dict", "modulename": "strongdm.models", "qualname": "Druid.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.DynamoDB", "modulename": "strongdm.models", "qualname": "DynamoDB", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DynamoDB.__init__", "modulename": "strongdm.models", "qualname": "DynamoDB.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    access_key=None,\n    bind_interface=None,\n    egress_filter=None,\n    endpoint=None,\n    healthy=None,\n    id=None,\n    name=None,\n    port_override=None,\n    region=None,\n    role_arn=None,\n    role_external_id=None,\n    secret_access_key=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.DynamoDB.access_key", "modulename": "strongdm.models", "qualname": "DynamoDB.access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DynamoDB.bind_interface", "modulename": "strongdm.models", "qualname": "DynamoDB.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.DynamoDB.egress_filter", "modulename": "strongdm.models", "qualname": "DynamoDB.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.DynamoDB.endpoint", "modulename": "strongdm.models", "qualname": "DynamoDB.endpoint", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DynamoDB.healthy", "modulename": "strongdm.models", "qualname": "DynamoDB.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.DynamoDB.id", "modulename": "strongdm.models", "qualname": "DynamoDB.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.DynamoDB.name", "modulename": "strongdm.models", "qualname": "DynamoDB.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.DynamoDB.port_override", "modulename": "strongdm.models", "qualname": "DynamoDB.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DynamoDB.region", "modulename": "strongdm.models", "qualname": "DynamoDB.region", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DynamoDB.role_arn", "modulename": "strongdm.models", "qualname": "DynamoDB.role_arn", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DynamoDB.role_external_id", "modulename": "strongdm.models", "qualname": "DynamoDB.role_external_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DynamoDB.secret_access_key", "modulename": "strongdm.models", "qualname": "DynamoDB.secret_access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.DynamoDB.secret_store_id", "modulename": "strongdm.models", "qualname": "DynamoDB.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.DynamoDB.tags", "modulename": "strongdm.models", "qualname": "DynamoDB.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.DynamoDB.to_dict", "modulename": "strongdm.models", "qualname": "DynamoDB.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.DynamoDB.from_dict", "modulename": "strongdm.models", "qualname": "DynamoDB.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Elastic", "modulename": "strongdm.models", "qualname": "Elastic", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Elastic.__init__", "modulename": "strongdm.models", "qualname": "Elastic.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Elastic.bind_interface", "modulename": "strongdm.models", "qualname": "Elastic.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Elastic.egress_filter", "modulename": "strongdm.models", "qualname": "Elastic.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Elastic.healthy", "modulename": "strongdm.models", "qualname": "Elastic.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Elastic.hostname", "modulename": "strongdm.models", "qualname": "Elastic.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Elastic.id", "modulename": "strongdm.models", "qualname": "Elastic.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Elastic.name", "modulename": "strongdm.models", "qualname": "Elastic.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Elastic.password", "modulename": "strongdm.models", "qualname": "Elastic.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Elastic.port", "modulename": "strongdm.models", "qualname": "Elastic.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Elastic.port_override", "modulename": "strongdm.models", "qualname": "Elastic.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Elastic.secret_store_id", "modulename": "strongdm.models", "qualname": "Elastic.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Elastic.tags", "modulename": "strongdm.models", "qualname": "Elastic.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Elastic.tls_required", "modulename": "strongdm.models", "qualname": "Elastic.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Elastic.username", "modulename": "strongdm.models", "qualname": "Elastic.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Elastic.to_dict", "modulename": "strongdm.models", "qualname": "Elastic.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Elastic.from_dict", "modulename": "strongdm.models", "qualname": "Elastic.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.ElasticacheRedis", "modulename": "strongdm.models", "qualname": "ElasticacheRedis", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.__init__", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.ElasticacheRedis.bind_interface", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.egress_filter", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.healthy", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.hostname", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.id", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.name", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.password", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.port", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.port_override", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.secret_store_id", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.tags", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.tls_required", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.username", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.ElasticacheRedis.to_dict", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.ElasticacheRedis.from_dict", "modulename": "strongdm.models", "qualname": "ElasticacheRedis.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.GCP", "modulename": "strongdm.models", "qualname": "GCP", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GCP.__init__", "modulename": "strongdm.models", "qualname": "GCP.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    id=None,\n    keyfile=None,\n    name=None,\n    scopes=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.GCP.bind_interface", "modulename": "strongdm.models", "qualname": "GCP.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.GCP.egress_filter", "modulename": "strongdm.models", "qualname": "GCP.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.GCP.healthy", "modulename": "strongdm.models", "qualname": "GCP.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.GCP.id", "modulename": "strongdm.models", "qualname": "GCP.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.GCP.keyfile", "modulename": "strongdm.models", "qualname": "GCP.keyfile", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GCP.name", "modulename": "strongdm.models", "qualname": "GCP.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.GCP.scopes", "modulename": "strongdm.models", "qualname": "GCP.scopes", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GCP.secret_store_id", "modulename": "strongdm.models", "qualname": "GCP.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.GCP.tags", "modulename": "strongdm.models", "qualname": "GCP.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.GCP.to_dict", "modulename": "strongdm.models", "qualname": "GCP.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.GCP.from_dict", "modulename": "strongdm.models", "qualname": "GCP.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.GCPStore", "modulename": "strongdm.models", "qualname": "GCPStore", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GCPStore.__init__", "modulename": "strongdm.models", "qualname": "GCPStore.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, id=None, name=None, projectid=None, tags=None)", "funcdef": "def"}, {"fullname": "strongdm.models.GCPStore.id", "modulename": "strongdm.models", "qualname": "GCPStore.id", "type": "variable", "doc": "<p>Unique identifier of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.GCPStore.name", "modulename": "strongdm.models", "qualname": "GCPStore.name", "type": "variable", "doc": "<p>Unique human-readable name of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.GCPStore.projectid", "modulename": "strongdm.models", "qualname": "GCPStore.projectid", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GCPStore.tags", "modulename": "strongdm.models", "qualname": "GCPStore.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.GCPStore.to_dict", "modulename": "strongdm.models", "qualname": "GCPStore.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.GCPStore.from_dict", "modulename": "strongdm.models", "qualname": "GCPStore.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Gateway", "modulename": "strongdm.models", "qualname": "Gateway", "type": "class", "doc": "<p>Gateway represents a StrongDM CLI installation running in gateway mode.</p>\n"}, {"fullname": "strongdm.models.Gateway.__init__", "modulename": "strongdm.models", "qualname": "Gateway.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_address=None,\n    device=None,\n    gateway_filter=None,\n    id=None,\n    listen_address=None,\n    location=None,\n    name=None,\n    state=None,\n    tags=None,\n    version=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Gateway.bind_address", "modulename": "strongdm.models", "qualname": "Gateway.bind_address", "type": "variable", "doc": "<p>The hostname/port tuple which the gateway daemon will bind to.\nIf not provided on create, set to \"0.0.0.0:listen_address_port\".</p>\n"}, {"fullname": "strongdm.models.Gateway.device", "modulename": "strongdm.models", "qualname": "Gateway.device", "type": "variable", "doc": "<p>Device is a read only device name uploaded by the gateway process when \nit comes online.</p>\n"}, {"fullname": "strongdm.models.Gateway.gateway_filter", "modulename": "strongdm.models", "qualname": "Gateway.gateway_filter", "type": "variable", "doc": "<p>GatewayFilter can be used to restrict the peering between relays and\ngateways.</p>\n"}, {"fullname": "strongdm.models.Gateway.id", "modulename": "strongdm.models", "qualname": "Gateway.id", "type": "variable", "doc": "<p>Unique identifier of the Gateway.</p>\n"}, {"fullname": "strongdm.models.Gateway.listen_address", "modulename": "strongdm.models", "qualname": "Gateway.listen_address", "type": "variable", "doc": "<p>The public hostname/port tuple at which the gateway will be accessible to clients.</p>\n"}, {"fullname": "strongdm.models.Gateway.location", "modulename": "strongdm.models", "qualname": "Gateway.location", "type": "variable", "doc": "<p>Location is a read only network location uploaded by the gateway process\nwhen it comes online.</p>\n"}, {"fullname": "strongdm.models.Gateway.name", "modulename": "strongdm.models", "qualname": "Gateway.name", "type": "variable", "doc": "<p>Unique human-readable name of the Gateway. Node names must include only letters, numbers, and hyphens (no spaces, underscores, or other special characters). Generated if not provided on create.</p>\n"}, {"fullname": "strongdm.models.Gateway.state", "modulename": "strongdm.models", "qualname": "Gateway.state", "type": "variable", "doc": "<p>The current state of the gateway. One of: \"new\", \"verifying_restart\",\n\"restarting\", \"started\", \"stopped\", \"dead\", \"unknown\"</p>\n"}, {"fullname": "strongdm.models.Gateway.tags", "modulename": "strongdm.models", "qualname": "Gateway.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Gateway.version", "modulename": "strongdm.models", "qualname": "Gateway.version", "type": "variable", "doc": "<p>Version is a read only sdm binary version uploaded by the gateway process\nwhen it comes online.</p>\n"}, {"fullname": "strongdm.models.Gateway.to_dict", "modulename": "strongdm.models", "qualname": "Gateway.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Gateway.from_dict", "modulename": "strongdm.models", "qualname": "Gateway.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.GetResponseMetadata", "modulename": "strongdm.models", "qualname": "GetResponseMetadata", "type": "class", "doc": "<p>GetResponseMetadata is reserved for future use.</p>\n"}, {"fullname": "strongdm.models.GetResponseMetadata.__init__", "modulename": "strongdm.models", "qualname": "GetResponseMetadata.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.GetResponseMetadata.to_dict", "modulename": "strongdm.models", "qualname": "GetResponseMetadata.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.GetResponseMetadata.from_dict", "modulename": "strongdm.models", "qualname": "GetResponseMetadata.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.GoogleGKE", "modulename": "strongdm.models", "qualname": "GoogleGKE", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GoogleGKE.__init__", "modulename": "strongdm.models", "qualname": "GoogleGKE.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    certificate_authority=None,\n    egress_filter=None,\n    endpoint=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    id=None,\n    name=None,\n    remote_identity_group_id=None,\n    remote_identity_healthcheck_username=None,\n    secret_store_id=None,\n    service_account_key=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.GoogleGKE.bind_interface", "modulename": "strongdm.models", "qualname": "GoogleGKE.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.GoogleGKE.certificate_authority", "modulename": "strongdm.models", "qualname": "GoogleGKE.certificate_authority", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GoogleGKE.egress_filter", "modulename": "strongdm.models", "qualname": "GoogleGKE.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.GoogleGKE.endpoint", "modulename": "strongdm.models", "qualname": "GoogleGKE.endpoint", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GoogleGKE.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "GoogleGKE.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.GoogleGKE.healthy", "modulename": "strongdm.models", "qualname": "GoogleGKE.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.GoogleGKE.id", "modulename": "strongdm.models", "qualname": "GoogleGKE.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.GoogleGKE.name", "modulename": "strongdm.models", "qualname": "GoogleGKE.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.GoogleGKE.remote_identity_group_id", "modulename": "strongdm.models", "qualname": "GoogleGKE.remote_identity_group_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GoogleGKE.remote_identity_healthcheck_username", "modulename": "strongdm.models", "qualname": "GoogleGKE.remote_identity_healthcheck_username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GoogleGKE.secret_store_id", "modulename": "strongdm.models", "qualname": "GoogleGKE.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.GoogleGKE.service_account_key", "modulename": "strongdm.models", "qualname": "GoogleGKE.service_account_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GoogleGKE.tags", "modulename": "strongdm.models", "qualname": "GoogleGKE.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.GoogleGKE.to_dict", "modulename": "strongdm.models", "qualname": "GoogleGKE.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.GoogleGKE.from_dict", "modulename": "strongdm.models", "qualname": "GoogleGKE.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.__init__", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    certificate_authority=None,\n    egress_filter=None,\n    endpoint=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    id=None,\n    name=None,\n    secret_store_id=None,\n    service_account_key=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.bind_interface", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.certificate_authority", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.certificate_authority", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.egress_filter", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.endpoint", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.endpoint", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.healthy", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.id", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.name", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.secret_store_id", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.service_account_key", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.service_account_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.tags", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.to_dict", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.GoogleGKEUserImpersonation.from_dict", "modulename": "strongdm.models", "qualname": "GoogleGKEUserImpersonation.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Greenplum", "modulename": "strongdm.models", "qualname": "Greenplum", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Greenplum.__init__", "modulename": "strongdm.models", "qualname": "Greenplum.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    override_database=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Greenplum.bind_interface", "modulename": "strongdm.models", "qualname": "Greenplum.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Greenplum.database", "modulename": "strongdm.models", "qualname": "Greenplum.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Greenplum.egress_filter", "modulename": "strongdm.models", "qualname": "Greenplum.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Greenplum.healthy", "modulename": "strongdm.models", "qualname": "Greenplum.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Greenplum.hostname", "modulename": "strongdm.models", "qualname": "Greenplum.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Greenplum.id", "modulename": "strongdm.models", "qualname": "Greenplum.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Greenplum.name", "modulename": "strongdm.models", "qualname": "Greenplum.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Greenplum.override_database", "modulename": "strongdm.models", "qualname": "Greenplum.override_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Greenplum.password", "modulename": "strongdm.models", "qualname": "Greenplum.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Greenplum.port", "modulename": "strongdm.models", "qualname": "Greenplum.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Greenplum.port_override", "modulename": "strongdm.models", "qualname": "Greenplum.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Greenplum.secret_store_id", "modulename": "strongdm.models", "qualname": "Greenplum.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Greenplum.tags", "modulename": "strongdm.models", "qualname": "Greenplum.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Greenplum.username", "modulename": "strongdm.models", "qualname": "Greenplum.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Greenplum.to_dict", "modulename": "strongdm.models", "qualname": "Greenplum.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Greenplum.from_dict", "modulename": "strongdm.models", "qualname": "Greenplum.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.HTTPAuth", "modulename": "strongdm.models", "qualname": "HTTPAuth", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPAuth.__init__", "modulename": "strongdm.models", "qualname": "HTTPAuth.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    auth_header=None,\n    bind_interface=None,\n    default_path=None,\n    egress_filter=None,\n    headers_blacklist=None,\n    healthcheck_path=None,\n    healthy=None,\n    host_override=None,\n    id=None,\n    name=None,\n    secret_store_id=None,\n    subdomain=None,\n    tags=None,\n    url=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.HTTPAuth.auth_header", "modulename": "strongdm.models", "qualname": "HTTPAuth.auth_header", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPAuth.bind_interface", "modulename": "strongdm.models", "qualname": "HTTPAuth.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.HTTPAuth.default_path", "modulename": "strongdm.models", "qualname": "HTTPAuth.default_path", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPAuth.egress_filter", "modulename": "strongdm.models", "qualname": "HTTPAuth.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.HTTPAuth.headers_blacklist", "modulename": "strongdm.models", "qualname": "HTTPAuth.headers_blacklist", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPAuth.healthcheck_path", "modulename": "strongdm.models", "qualname": "HTTPAuth.healthcheck_path", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPAuth.healthy", "modulename": "strongdm.models", "qualname": "HTTPAuth.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.HTTPAuth.host_override", "modulename": "strongdm.models", "qualname": "HTTPAuth.host_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPAuth.id", "modulename": "strongdm.models", "qualname": "HTTPAuth.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.HTTPAuth.name", "modulename": "strongdm.models", "qualname": "HTTPAuth.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.HTTPAuth.secret_store_id", "modulename": "strongdm.models", "qualname": "HTTPAuth.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.HTTPAuth.subdomain", "modulename": "strongdm.models", "qualname": "HTTPAuth.subdomain", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPAuth.tags", "modulename": "strongdm.models", "qualname": "HTTPAuth.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.HTTPAuth.url", "modulename": "strongdm.models", "qualname": "HTTPAuth.url", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPAuth.to_dict", "modulename": "strongdm.models", "qualname": "HTTPAuth.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.HTTPAuth.from_dict", "modulename": "strongdm.models", "qualname": "HTTPAuth.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.HTTPBasicAuth", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.__init__", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    default_path=None,\n    egress_filter=None,\n    headers_blacklist=None,\n    healthcheck_path=None,\n    healthy=None,\n    host_override=None,\n    id=None,\n    name=None,\n    password=None,\n    secret_store_id=None,\n    subdomain=None,\n    tags=None,\n    url=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.HTTPBasicAuth.bind_interface", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.default_path", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.default_path", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.egress_filter", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.headers_blacklist", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.headers_blacklist", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.healthcheck_path", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.healthcheck_path", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.healthy", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.host_override", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.host_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.id", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.name", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.password", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.secret_store_id", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.subdomain", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.subdomain", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.tags", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.url", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.url", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.username", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPBasicAuth.to_dict", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.HTTPBasicAuth.from_dict", "modulename": "strongdm.models", "qualname": "HTTPBasicAuth.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.HTTPNoAuth", "modulename": "strongdm.models", "qualname": "HTTPNoAuth", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.__init__", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    default_path=None,\n    egress_filter=None,\n    headers_blacklist=None,\n    healthcheck_path=None,\n    healthy=None,\n    host_override=None,\n    id=None,\n    name=None,\n    secret_store_id=None,\n    subdomain=None,\n    tags=None,\n    url=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.HTTPNoAuth.bind_interface", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.default_path", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.default_path", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.egress_filter", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.headers_blacklist", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.headers_blacklist", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.healthcheck_path", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.healthcheck_path", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.healthy", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.host_override", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.host_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.id", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.name", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.secret_store_id", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.subdomain", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.subdomain", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.tags", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.url", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.url", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.HTTPNoAuth.to_dict", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.HTTPNoAuth.from_dict", "modulename": "strongdm.models", "qualname": "HTTPNoAuth.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Kubernetes", "modulename": "strongdm.models", "qualname": "Kubernetes", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Kubernetes.__init__", "modulename": "strongdm.models", "qualname": "Kubernetes.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    certificate_authority=None,\n    client_certificate=None,\n    client_key=None,\n    egress_filter=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    remote_identity_group_id=None,\n    remote_identity_healthcheck_username=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Kubernetes.bind_interface", "modulename": "strongdm.models", "qualname": "Kubernetes.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Kubernetes.certificate_authority", "modulename": "strongdm.models", "qualname": "Kubernetes.certificate_authority", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Kubernetes.client_certificate", "modulename": "strongdm.models", "qualname": "Kubernetes.client_certificate", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Kubernetes.client_key", "modulename": "strongdm.models", "qualname": "Kubernetes.client_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Kubernetes.egress_filter", "modulename": "strongdm.models", "qualname": "Kubernetes.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Kubernetes.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "Kubernetes.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.Kubernetes.healthy", "modulename": "strongdm.models", "qualname": "Kubernetes.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Kubernetes.hostname", "modulename": "strongdm.models", "qualname": "Kubernetes.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Kubernetes.id", "modulename": "strongdm.models", "qualname": "Kubernetes.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Kubernetes.name", "modulename": "strongdm.models", "qualname": "Kubernetes.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Kubernetes.port", "modulename": "strongdm.models", "qualname": "Kubernetes.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Kubernetes.port_override", "modulename": "strongdm.models", "qualname": "Kubernetes.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Kubernetes.remote_identity_group_id", "modulename": "strongdm.models", "qualname": "Kubernetes.remote_identity_group_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Kubernetes.remote_identity_healthcheck_username", "modulename": "strongdm.models", "qualname": "Kubernetes.remote_identity_healthcheck_username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Kubernetes.secret_store_id", "modulename": "strongdm.models", "qualname": "Kubernetes.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Kubernetes.tags", "modulename": "strongdm.models", "qualname": "Kubernetes.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Kubernetes.to_dict", "modulename": "strongdm.models", "qualname": "Kubernetes.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Kubernetes.from_dict", "modulename": "strongdm.models", "qualname": "Kubernetes.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesBasicAuth", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.__init__", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesBasicAuth.bind_interface", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.egress_filter", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.healthy", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.hostname", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.id", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.name", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.password", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.port", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.port_override", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.secret_store_id", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.tags", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.username", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesBasicAuth.to_dict", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesBasicAuth.from_dict", "modulename": "strongdm.models", "qualname": "KubernetesBasicAuth.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesServiceAccount", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.__init__", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    remote_identity_group_id=None,\n    remote_identity_healthcheck_username=None,\n    secret_store_id=None,\n    tags=None,\n    token=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesServiceAccount.bind_interface", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.egress_filter", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.healthy", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.hostname", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.id", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.name", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.port", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.port_override", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.remote_identity_group_id", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.remote_identity_group_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.remote_identity_healthcheck_username", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.remote_identity_healthcheck_username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.secret_store_id", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.tags", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.token", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.token", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccount.to_dict", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesServiceAccount.from_dict", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccount.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.__init__", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    token=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.bind_interface", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.egress_filter", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.healthy", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.hostname", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.id", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.name", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.port", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.port_override", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.secret_store_id", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.tags", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.token", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.token", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.to_dict", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesServiceAccountUserImpersonation.from_dict", "modulename": "strongdm.models", "qualname": "KubernetesServiceAccountUserImpersonation.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesUserImpersonation", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.__init__", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    certificate_authority=None,\n    client_certificate=None,\n    client_key=None,\n    egress_filter=None,\n    healthcheck_namespace=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.bind_interface", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.certificate_authority", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.certificate_authority", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.client_certificate", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.client_certificate", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.client_key", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.client_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.egress_filter", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.healthcheck_namespace", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.healthcheck_namespace", "type": "variable", "doc": "<p>The path used to check the health of your connection.  Defaults to <code>default</code>.</p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.healthy", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.hostname", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.id", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.name", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.port", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.port_override", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.secret_store_id", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.tags", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.to_dict", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.KubernetesUserImpersonation.from_dict", "modulename": "strongdm.models", "qualname": "KubernetesUserImpersonation.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.MTLSMysql", "modulename": "strongdm.models", "qualname": "MTLSMysql", "type": "class", "doc": "<p>MTLSMysql is currently unstable, and its API may change, or it may be removed,\nwithout a major version bump.</p>\n"}, {"fullname": "strongdm.models.MTLSMysql.__init__", "modulename": "strongdm.models", "qualname": "MTLSMysql.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    certificate_authority=None,\n    client_certificate=None,\n    client_key=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    server_name=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.MTLSMysql.bind_interface", "modulename": "strongdm.models", "qualname": "MTLSMysql.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.MTLSMysql.certificate_authority", "modulename": "strongdm.models", "qualname": "MTLSMysql.certificate_authority", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSMysql.client_certificate", "modulename": "strongdm.models", "qualname": "MTLSMysql.client_certificate", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSMysql.client_key", "modulename": "strongdm.models", "qualname": "MTLSMysql.client_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSMysql.database", "modulename": "strongdm.models", "qualname": "MTLSMysql.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSMysql.egress_filter", "modulename": "strongdm.models", "qualname": "MTLSMysql.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.MTLSMysql.healthy", "modulename": "strongdm.models", "qualname": "MTLSMysql.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.MTLSMysql.hostname", "modulename": "strongdm.models", "qualname": "MTLSMysql.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSMysql.id", "modulename": "strongdm.models", "qualname": "MTLSMysql.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.MTLSMysql.name", "modulename": "strongdm.models", "qualname": "MTLSMysql.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.MTLSMysql.password", "modulename": "strongdm.models", "qualname": "MTLSMysql.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSMysql.port", "modulename": "strongdm.models", "qualname": "MTLSMysql.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSMysql.port_override", "modulename": "strongdm.models", "qualname": "MTLSMysql.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSMysql.secret_store_id", "modulename": "strongdm.models", "qualname": "MTLSMysql.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.MTLSMysql.server_name", "modulename": "strongdm.models", "qualname": "MTLSMysql.server_name", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSMysql.tags", "modulename": "strongdm.models", "qualname": "MTLSMysql.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.MTLSMysql.username", "modulename": "strongdm.models", "qualname": "MTLSMysql.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSMysql.to_dict", "modulename": "strongdm.models", "qualname": "MTLSMysql.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.MTLSMysql.from_dict", "modulename": "strongdm.models", "qualname": "MTLSMysql.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.MTLSPostgres", "modulename": "strongdm.models", "qualname": "MTLSPostgres", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.__init__", "modulename": "strongdm.models", "qualname": "MTLSPostgres.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    certificate_authority=None,\n    client_certificate=None,\n    client_key=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    override_database=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    server_name=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.MTLSPostgres.bind_interface", "modulename": "strongdm.models", "qualname": "MTLSPostgres.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.certificate_authority", "modulename": "strongdm.models", "qualname": "MTLSPostgres.certificate_authority", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.client_certificate", "modulename": "strongdm.models", "qualname": "MTLSPostgres.client_certificate", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.client_key", "modulename": "strongdm.models", "qualname": "MTLSPostgres.client_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.database", "modulename": "strongdm.models", "qualname": "MTLSPostgres.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.egress_filter", "modulename": "strongdm.models", "qualname": "MTLSPostgres.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.healthy", "modulename": "strongdm.models", "qualname": "MTLSPostgres.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.hostname", "modulename": "strongdm.models", "qualname": "MTLSPostgres.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.id", "modulename": "strongdm.models", "qualname": "MTLSPostgres.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.name", "modulename": "strongdm.models", "qualname": "MTLSPostgres.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.override_database", "modulename": "strongdm.models", "qualname": "MTLSPostgres.override_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.password", "modulename": "strongdm.models", "qualname": "MTLSPostgres.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.port", "modulename": "strongdm.models", "qualname": "MTLSPostgres.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.port_override", "modulename": "strongdm.models", "qualname": "MTLSPostgres.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.secret_store_id", "modulename": "strongdm.models", "qualname": "MTLSPostgres.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.server_name", "modulename": "strongdm.models", "qualname": "MTLSPostgres.server_name", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.tags", "modulename": "strongdm.models", "qualname": "MTLSPostgres.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.username", "modulename": "strongdm.models", "qualname": "MTLSPostgres.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MTLSPostgres.to_dict", "modulename": "strongdm.models", "qualname": "MTLSPostgres.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.MTLSPostgres.from_dict", "modulename": "strongdm.models", "qualname": "MTLSPostgres.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Maria", "modulename": "strongdm.models", "qualname": "Maria", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Maria.__init__", "modulename": "strongdm.models", "qualname": "Maria.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Maria.bind_interface", "modulename": "strongdm.models", "qualname": "Maria.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Maria.database", "modulename": "strongdm.models", "qualname": "Maria.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Maria.egress_filter", "modulename": "strongdm.models", "qualname": "Maria.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Maria.healthy", "modulename": "strongdm.models", "qualname": "Maria.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Maria.hostname", "modulename": "strongdm.models", "qualname": "Maria.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Maria.id", "modulename": "strongdm.models", "qualname": "Maria.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Maria.name", "modulename": "strongdm.models", "qualname": "Maria.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Maria.password", "modulename": "strongdm.models", "qualname": "Maria.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Maria.port", "modulename": "strongdm.models", "qualname": "Maria.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Maria.port_override", "modulename": "strongdm.models", "qualname": "Maria.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Maria.secret_store_id", "modulename": "strongdm.models", "qualname": "Maria.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Maria.tags", "modulename": "strongdm.models", "qualname": "Maria.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Maria.username", "modulename": "strongdm.models", "qualname": "Maria.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Maria.to_dict", "modulename": "strongdm.models", "qualname": "Maria.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Maria.from_dict", "modulename": "strongdm.models", "qualname": "Maria.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Memcached", "modulename": "strongdm.models", "qualname": "Memcached", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Memcached.__init__", "modulename": "strongdm.models", "qualname": "Memcached.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Memcached.bind_interface", "modulename": "strongdm.models", "qualname": "Memcached.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Memcached.egress_filter", "modulename": "strongdm.models", "qualname": "Memcached.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Memcached.healthy", "modulename": "strongdm.models", "qualname": "Memcached.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Memcached.hostname", "modulename": "strongdm.models", "qualname": "Memcached.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Memcached.id", "modulename": "strongdm.models", "qualname": "Memcached.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Memcached.name", "modulename": "strongdm.models", "qualname": "Memcached.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Memcached.port", "modulename": "strongdm.models", "qualname": "Memcached.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Memcached.port_override", "modulename": "strongdm.models", "qualname": "Memcached.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Memcached.secret_store_id", "modulename": "strongdm.models", "qualname": "Memcached.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Memcached.tags", "modulename": "strongdm.models", "qualname": "Memcached.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Memcached.to_dict", "modulename": "strongdm.models", "qualname": "Memcached.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Memcached.from_dict", "modulename": "strongdm.models", "qualname": "Memcached.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Memsql", "modulename": "strongdm.models", "qualname": "Memsql", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Memsql.__init__", "modulename": "strongdm.models", "qualname": "Memsql.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Memsql.bind_interface", "modulename": "strongdm.models", "qualname": "Memsql.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Memsql.database", "modulename": "strongdm.models", "qualname": "Memsql.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Memsql.egress_filter", "modulename": "strongdm.models", "qualname": "Memsql.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Memsql.healthy", "modulename": "strongdm.models", "qualname": "Memsql.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Memsql.hostname", "modulename": "strongdm.models", "qualname": "Memsql.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Memsql.id", "modulename": "strongdm.models", "qualname": "Memsql.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Memsql.name", "modulename": "strongdm.models", "qualname": "Memsql.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Memsql.password", "modulename": "strongdm.models", "qualname": "Memsql.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Memsql.port", "modulename": "strongdm.models", "qualname": "Memsql.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Memsql.port_override", "modulename": "strongdm.models", "qualname": "Memsql.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Memsql.secret_store_id", "modulename": "strongdm.models", "qualname": "Memsql.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Memsql.tags", "modulename": "strongdm.models", "qualname": "Memsql.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Memsql.username", "modulename": "strongdm.models", "qualname": "Memsql.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Memsql.to_dict", "modulename": "strongdm.models", "qualname": "Memsql.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Memsql.from_dict", "modulename": "strongdm.models", "qualname": "Memsql.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoHost", "modulename": "strongdm.models", "qualname": "MongoHost", "type": "class", "doc": "<p>MongoHost is currently unstable, and its API may change, or it may be removed,\nwithout a major version bump.</p>\n"}, {"fullname": "strongdm.models.MongoHost.__init__", "modulename": "strongdm.models", "qualname": "MongoHost.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    auth_database=None,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoHost.auth_database", "modulename": "strongdm.models", "qualname": "MongoHost.auth_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoHost.bind_interface", "modulename": "strongdm.models", "qualname": "MongoHost.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.MongoHost.egress_filter", "modulename": "strongdm.models", "qualname": "MongoHost.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.MongoHost.healthy", "modulename": "strongdm.models", "qualname": "MongoHost.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.MongoHost.hostname", "modulename": "strongdm.models", "qualname": "MongoHost.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoHost.id", "modulename": "strongdm.models", "qualname": "MongoHost.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.MongoHost.name", "modulename": "strongdm.models", "qualname": "MongoHost.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.MongoHost.password", "modulename": "strongdm.models", "qualname": "MongoHost.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoHost.port", "modulename": "strongdm.models", "qualname": "MongoHost.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoHost.port_override", "modulename": "strongdm.models", "qualname": "MongoHost.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoHost.secret_store_id", "modulename": "strongdm.models", "qualname": "MongoHost.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.MongoHost.tags", "modulename": "strongdm.models", "qualname": "MongoHost.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.MongoHost.tls_required", "modulename": "strongdm.models", "qualname": "MongoHost.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoHost.username", "modulename": "strongdm.models", "qualname": "MongoHost.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoHost.to_dict", "modulename": "strongdm.models", "qualname": "MongoHost.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoHost.from_dict", "modulename": "strongdm.models", "qualname": "MongoHost.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoLegacyHost", "modulename": "strongdm.models", "qualname": "MongoLegacyHost", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.__init__", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    auth_database=None,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    replica_set=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoLegacyHost.auth_database", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.auth_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.bind_interface", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.egress_filter", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.healthy", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.hostname", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.id", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.name", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.password", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.port", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.port_override", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.replica_set", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.replica_set", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.secret_store_id", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.tags", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.tls_required", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.username", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyHost.to_dict", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoLegacyHost.from_dict", "modulename": "strongdm.models", "qualname": "MongoLegacyHost.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoLegacyReplicaset", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.__init__", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    auth_database=None,\n    bind_interface=None,\n    connect_to_replica=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    replica_set=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.auth_database", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.auth_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.bind_interface", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.connect_to_replica", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.connect_to_replica", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.egress_filter", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.healthy", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.hostname", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.id", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.name", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.password", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.port", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.port_override", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.replica_set", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.replica_set", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.secret_store_id", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.tags", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.tls_required", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.username", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.to_dict", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoLegacyReplicaset.from_dict", "modulename": "strongdm.models", "qualname": "MongoLegacyReplicaset.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoReplicaSet", "modulename": "strongdm.models", "qualname": "MongoReplicaSet", "type": "class", "doc": "<p>MongoReplicaSet is currently unstable, and its API may change, or it may be removed,\nwithout a major version bump.</p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.__init__", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    auth_database=None,\n    bind_interface=None,\n    connect_to_replica=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    replica_set=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoReplicaSet.auth_database", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.auth_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.bind_interface", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.connect_to_replica", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.connect_to_replica", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.egress_filter", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.healthy", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.hostname", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.id", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.name", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.password", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.port", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.port_override", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.replica_set", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.replica_set", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.secret_store_id", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.tags", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.tls_required", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.username", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoReplicaSet.to_dict", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoReplicaSet.from_dict", "modulename": "strongdm.models", "qualname": "MongoReplicaSet.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoShardedCluster", "modulename": "strongdm.models", "qualname": "MongoShardedCluster", "type": "class", "doc": "<p>MongoShardedCluster is currently unstable, and its API may change, or it may be removed,\nwithout a major version bump.</p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.__init__", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    auth_database=None,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoShardedCluster.auth_database", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.auth_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.bind_interface", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.egress_filter", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.healthy", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.hostname", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.id", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.name", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.password", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.port_override", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.secret_store_id", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.tags", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.tls_required", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.username", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.MongoShardedCluster.to_dict", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.MongoShardedCluster.from_dict", "modulename": "strongdm.models", "qualname": "MongoShardedCluster.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Mysql", "modulename": "strongdm.models", "qualname": "Mysql", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Mysql.__init__", "modulename": "strongdm.models", "qualname": "Mysql.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Mysql.bind_interface", "modulename": "strongdm.models", "qualname": "Mysql.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Mysql.database", "modulename": "strongdm.models", "qualname": "Mysql.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Mysql.egress_filter", "modulename": "strongdm.models", "qualname": "Mysql.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Mysql.healthy", "modulename": "strongdm.models", "qualname": "Mysql.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Mysql.hostname", "modulename": "strongdm.models", "qualname": "Mysql.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Mysql.id", "modulename": "strongdm.models", "qualname": "Mysql.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Mysql.name", "modulename": "strongdm.models", "qualname": "Mysql.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Mysql.password", "modulename": "strongdm.models", "qualname": "Mysql.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Mysql.port", "modulename": "strongdm.models", "qualname": "Mysql.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Mysql.port_override", "modulename": "strongdm.models", "qualname": "Mysql.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Mysql.secret_store_id", "modulename": "strongdm.models", "qualname": "Mysql.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Mysql.tags", "modulename": "strongdm.models", "qualname": "Mysql.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Mysql.username", "modulename": "strongdm.models", "qualname": "Mysql.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Mysql.to_dict", "modulename": "strongdm.models", "qualname": "Mysql.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Mysql.from_dict", "modulename": "strongdm.models", "qualname": "Mysql.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Neptune", "modulename": "strongdm.models", "qualname": "Neptune", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Neptune.__init__", "modulename": "strongdm.models", "qualname": "Neptune.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    endpoint=None,\n    healthy=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Neptune.bind_interface", "modulename": "strongdm.models", "qualname": "Neptune.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Neptune.egress_filter", "modulename": "strongdm.models", "qualname": "Neptune.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Neptune.endpoint", "modulename": "strongdm.models", "qualname": "Neptune.endpoint", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Neptune.healthy", "modulename": "strongdm.models", "qualname": "Neptune.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Neptune.id", "modulename": "strongdm.models", "qualname": "Neptune.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Neptune.name", "modulename": "strongdm.models", "qualname": "Neptune.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Neptune.port", "modulename": "strongdm.models", "qualname": "Neptune.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Neptune.port_override", "modulename": "strongdm.models", "qualname": "Neptune.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Neptune.secret_store_id", "modulename": "strongdm.models", "qualname": "Neptune.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Neptune.tags", "modulename": "strongdm.models", "qualname": "Neptune.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Neptune.to_dict", "modulename": "strongdm.models", "qualname": "Neptune.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Neptune.from_dict", "modulename": "strongdm.models", "qualname": "Neptune.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.NeptuneIAM", "modulename": "strongdm.models", "qualname": "NeptuneIAM", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.__init__", "modulename": "strongdm.models", "qualname": "NeptuneIAM.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    access_key=None,\n    bind_interface=None,\n    egress_filter=None,\n    endpoint=None,\n    healthy=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    region=None,\n    role_arn=None,\n    role_external_id=None,\n    secret_access_key=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.NeptuneIAM.access_key", "modulename": "strongdm.models", "qualname": "NeptuneIAM.access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.bind_interface", "modulename": "strongdm.models", "qualname": "NeptuneIAM.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.egress_filter", "modulename": "strongdm.models", "qualname": "NeptuneIAM.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.endpoint", "modulename": "strongdm.models", "qualname": "NeptuneIAM.endpoint", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.healthy", "modulename": "strongdm.models", "qualname": "NeptuneIAM.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.id", "modulename": "strongdm.models", "qualname": "NeptuneIAM.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.name", "modulename": "strongdm.models", "qualname": "NeptuneIAM.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.port", "modulename": "strongdm.models", "qualname": "NeptuneIAM.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.port_override", "modulename": "strongdm.models", "qualname": "NeptuneIAM.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.region", "modulename": "strongdm.models", "qualname": "NeptuneIAM.region", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.role_arn", "modulename": "strongdm.models", "qualname": "NeptuneIAM.role_arn", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.role_external_id", "modulename": "strongdm.models", "qualname": "NeptuneIAM.role_external_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.secret_access_key", "modulename": "strongdm.models", "qualname": "NeptuneIAM.secret_access_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.secret_store_id", "modulename": "strongdm.models", "qualname": "NeptuneIAM.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.tags", "modulename": "strongdm.models", "qualname": "NeptuneIAM.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.NeptuneIAM.to_dict", "modulename": "strongdm.models", "qualname": "NeptuneIAM.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.NeptuneIAM.from_dict", "modulename": "strongdm.models", "qualname": "NeptuneIAM.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeCreateResponse", "modulename": "strongdm.models", "qualname": "NodeCreateResponse", "type": "class", "doc": "<p>NodeCreateResponse reports how the Nodes were created in the system.</p>\n"}, {"fullname": "strongdm.models.NodeCreateResponse.__init__", "modulename": "strongdm.models", "qualname": "NodeCreateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, node=None, rate_limit=None, token=None)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeCreateResponse.meta", "modulename": "strongdm.models", "qualname": "NodeCreateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.NodeCreateResponse.node", "modulename": "strongdm.models", "qualname": "NodeCreateResponse.node", "type": "variable", "doc": "<p>The created Node.</p>\n"}, {"fullname": "strongdm.models.NodeCreateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "NodeCreateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.NodeCreateResponse.token", "modulename": "strongdm.models", "qualname": "NodeCreateResponse.token", "type": "variable", "doc": "<p>The auth token generated for the Node. The Node will use this token to\nauthenticate with the strongDM API.</p>\n"}, {"fullname": "strongdm.models.NodeCreateResponse.to_dict", "modulename": "strongdm.models", "qualname": "NodeCreateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeCreateResponse.from_dict", "modulename": "strongdm.models", "qualname": "NodeCreateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeDeleteResponse", "modulename": "strongdm.models", "qualname": "NodeDeleteResponse", "type": "class", "doc": "<p>NodeDeleteResponse returns information about a Node that was deleted.</p>\n"}, {"fullname": "strongdm.models.NodeDeleteResponse.__init__", "modulename": "strongdm.models", "qualname": "NodeDeleteResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeDeleteResponse.meta", "modulename": "strongdm.models", "qualname": "NodeDeleteResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.NodeDeleteResponse.rate_limit", "modulename": "strongdm.models", "qualname": "NodeDeleteResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.NodeDeleteResponse.to_dict", "modulename": "strongdm.models", "qualname": "NodeDeleteResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeDeleteResponse.from_dict", "modulename": "strongdm.models", "qualname": "NodeDeleteResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeGetResponse", "modulename": "strongdm.models", "qualname": "NodeGetResponse", "type": "class", "doc": "<p>NodeGetResponse returns a requested Node.</p>\n"}, {"fullname": "strongdm.models.NodeGetResponse.__init__", "modulename": "strongdm.models", "qualname": "NodeGetResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, node=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeGetResponse.meta", "modulename": "strongdm.models", "qualname": "NodeGetResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.NodeGetResponse.node", "modulename": "strongdm.models", "qualname": "NodeGetResponse.node", "type": "variable", "doc": "<p>The requested Node.</p>\n"}, {"fullname": "strongdm.models.NodeGetResponse.rate_limit", "modulename": "strongdm.models", "qualname": "NodeGetResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.NodeGetResponse.to_dict", "modulename": "strongdm.models", "qualname": "NodeGetResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeGetResponse.from_dict", "modulename": "strongdm.models", "qualname": "NodeGetResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeUpdateResponse", "modulename": "strongdm.models", "qualname": "NodeUpdateResponse", "type": "class", "doc": "<p>NodeUpdateResponse returns the fields of a Node after it has been updated by\na NodeUpdateRequest.</p>\n"}, {"fullname": "strongdm.models.NodeUpdateResponse.__init__", "modulename": "strongdm.models", "qualname": "NodeUpdateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, node=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeUpdateResponse.meta", "modulename": "strongdm.models", "qualname": "NodeUpdateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.NodeUpdateResponse.node", "modulename": "strongdm.models", "qualname": "NodeUpdateResponse.node", "type": "variable", "doc": "<p>The updated Node.</p>\n"}, {"fullname": "strongdm.models.NodeUpdateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "NodeUpdateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.NodeUpdateResponse.to_dict", "modulename": "strongdm.models", "qualname": "NodeUpdateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.NodeUpdateResponse.from_dict", "modulename": "strongdm.models", "qualname": "NodeUpdateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Oracle", "modulename": "strongdm.models", "qualname": "Oracle", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Oracle.__init__", "modulename": "strongdm.models", "qualname": "Oracle.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Oracle.bind_interface", "modulename": "strongdm.models", "qualname": "Oracle.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Oracle.database", "modulename": "strongdm.models", "qualname": "Oracle.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Oracle.egress_filter", "modulename": "strongdm.models", "qualname": "Oracle.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Oracle.healthy", "modulename": "strongdm.models", "qualname": "Oracle.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Oracle.hostname", "modulename": "strongdm.models", "qualname": "Oracle.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Oracle.id", "modulename": "strongdm.models", "qualname": "Oracle.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Oracle.name", "modulename": "strongdm.models", "qualname": "Oracle.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Oracle.password", "modulename": "strongdm.models", "qualname": "Oracle.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Oracle.port", "modulename": "strongdm.models", "qualname": "Oracle.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Oracle.port_override", "modulename": "strongdm.models", "qualname": "Oracle.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Oracle.secret_store_id", "modulename": "strongdm.models", "qualname": "Oracle.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Oracle.tags", "modulename": "strongdm.models", "qualname": "Oracle.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Oracle.tls_required", "modulename": "strongdm.models", "qualname": "Oracle.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Oracle.username", "modulename": "strongdm.models", "qualname": "Oracle.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Oracle.to_dict", "modulename": "strongdm.models", "qualname": "Oracle.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Oracle.from_dict", "modulename": "strongdm.models", "qualname": "Oracle.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Postgres", "modulename": "strongdm.models", "qualname": "Postgres", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Postgres.__init__", "modulename": "strongdm.models", "qualname": "Postgres.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    override_database=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Postgres.bind_interface", "modulename": "strongdm.models", "qualname": "Postgres.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Postgres.database", "modulename": "strongdm.models", "qualname": "Postgres.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Postgres.egress_filter", "modulename": "strongdm.models", "qualname": "Postgres.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Postgres.healthy", "modulename": "strongdm.models", "qualname": "Postgres.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Postgres.hostname", "modulename": "strongdm.models", "qualname": "Postgres.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Postgres.id", "modulename": "strongdm.models", "qualname": "Postgres.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Postgres.name", "modulename": "strongdm.models", "qualname": "Postgres.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Postgres.override_database", "modulename": "strongdm.models", "qualname": "Postgres.override_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Postgres.password", "modulename": "strongdm.models", "qualname": "Postgres.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Postgres.port", "modulename": "strongdm.models", "qualname": "Postgres.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Postgres.port_override", "modulename": "strongdm.models", "qualname": "Postgres.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Postgres.secret_store_id", "modulename": "strongdm.models", "qualname": "Postgres.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Postgres.tags", "modulename": "strongdm.models", "qualname": "Postgres.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Postgres.username", "modulename": "strongdm.models", "qualname": "Postgres.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Postgres.to_dict", "modulename": "strongdm.models", "qualname": "Postgres.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Postgres.from_dict", "modulename": "strongdm.models", "qualname": "Postgres.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Presto", "modulename": "strongdm.models", "qualname": "Presto", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Presto.__init__", "modulename": "strongdm.models", "qualname": "Presto.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Presto.bind_interface", "modulename": "strongdm.models", "qualname": "Presto.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Presto.database", "modulename": "strongdm.models", "qualname": "Presto.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Presto.egress_filter", "modulename": "strongdm.models", "qualname": "Presto.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Presto.healthy", "modulename": "strongdm.models", "qualname": "Presto.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Presto.hostname", "modulename": "strongdm.models", "qualname": "Presto.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Presto.id", "modulename": "strongdm.models", "qualname": "Presto.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Presto.name", "modulename": "strongdm.models", "qualname": "Presto.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Presto.password", "modulename": "strongdm.models", "qualname": "Presto.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Presto.port", "modulename": "strongdm.models", "qualname": "Presto.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Presto.port_override", "modulename": "strongdm.models", "qualname": "Presto.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Presto.secret_store_id", "modulename": "strongdm.models", "qualname": "Presto.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Presto.tags", "modulename": "strongdm.models", "qualname": "Presto.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Presto.tls_required", "modulename": "strongdm.models", "qualname": "Presto.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Presto.username", "modulename": "strongdm.models", "qualname": "Presto.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Presto.to_dict", "modulename": "strongdm.models", "qualname": "Presto.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Presto.from_dict", "modulename": "strongdm.models", "qualname": "Presto.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RDP", "modulename": "strongdm.models", "qualname": "RDP", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RDP.__init__", "modulename": "strongdm.models", "qualname": "RDP.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    downgrade_nla_connections=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.RDP.bind_interface", "modulename": "strongdm.models", "qualname": "RDP.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.RDP.downgrade_nla_connections", "modulename": "strongdm.models", "qualname": "RDP.downgrade_nla_connections", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RDP.egress_filter", "modulename": "strongdm.models", "qualname": "RDP.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.RDP.healthy", "modulename": "strongdm.models", "qualname": "RDP.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.RDP.hostname", "modulename": "strongdm.models", "qualname": "RDP.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RDP.id", "modulename": "strongdm.models", "qualname": "RDP.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.RDP.name", "modulename": "strongdm.models", "qualname": "RDP.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.RDP.password", "modulename": "strongdm.models", "qualname": "RDP.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RDP.port", "modulename": "strongdm.models", "qualname": "RDP.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RDP.port_override", "modulename": "strongdm.models", "qualname": "RDP.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RDP.secret_store_id", "modulename": "strongdm.models", "qualname": "RDP.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.RDP.tags", "modulename": "strongdm.models", "qualname": "RDP.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.RDP.username", "modulename": "strongdm.models", "qualname": "RDP.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RDP.to_dict", "modulename": "strongdm.models", "qualname": "RDP.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RDP.from_dict", "modulename": "strongdm.models", "qualname": "RDP.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RabbitMQAMQP091", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.__init__", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.RabbitMQAMQP091.bind_interface", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.egress_filter", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.healthy", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.hostname", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.id", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.name", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.password", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.port", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.port_override", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.secret_store_id", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.tags", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.tls_required", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.username", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RabbitMQAMQP091.to_dict", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RabbitMQAMQP091.from_dict", "modulename": "strongdm.models", "qualname": "RabbitMQAMQP091.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RateLimitMetadata", "modulename": "strongdm.models", "qualname": "RateLimitMetadata", "type": "class", "doc": "<p>RateLimitMetadata contains information about remaining requests avaialable\nto the user over some timeframe.</p>\n"}, {"fullname": "strongdm.models.RateLimitMetadata.__init__", "modulename": "strongdm.models", "qualname": "RateLimitMetadata.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, bucket=None, limit=None, remaining=None, reset_at=None)", "funcdef": "def"}, {"fullname": "strongdm.models.RateLimitMetadata.bucket", "modulename": "strongdm.models", "qualname": "RateLimitMetadata.bucket", "type": "variable", "doc": "<p>The bucket this user/token is associated with, which may be shared between\nmultiple users/tokens.</p>\n"}, {"fullname": "strongdm.models.RateLimitMetadata.limit", "modulename": "strongdm.models", "qualname": "RateLimitMetadata.limit", "type": "variable", "doc": "<p>How many total requests the user/token is authorized to make before being\nrate limited.</p>\n"}, {"fullname": "strongdm.models.RateLimitMetadata.remaining", "modulename": "strongdm.models", "qualname": "RateLimitMetadata.remaining", "type": "variable", "doc": "<p>How many remaining requests out of the limit are still avaialable.</p>\n"}, {"fullname": "strongdm.models.RateLimitMetadata.reset_at", "modulename": "strongdm.models", "qualname": "RateLimitMetadata.reset_at", "type": "variable", "doc": "<p>The time when remaining will be reset to limit.</p>\n"}, {"fullname": "strongdm.models.RateLimitMetadata.to_dict", "modulename": "strongdm.models", "qualname": "RateLimitMetadata.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RateLimitMetadata.from_dict", "modulename": "strongdm.models", "qualname": "RateLimitMetadata.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RawTCP", "modulename": "strongdm.models", "qualname": "RawTCP", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RawTCP.__init__", "modulename": "strongdm.models", "qualname": "RawTCP.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.RawTCP.bind_interface", "modulename": "strongdm.models", "qualname": "RawTCP.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.RawTCP.egress_filter", "modulename": "strongdm.models", "qualname": "RawTCP.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.RawTCP.healthy", "modulename": "strongdm.models", "qualname": "RawTCP.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.RawTCP.hostname", "modulename": "strongdm.models", "qualname": "RawTCP.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RawTCP.id", "modulename": "strongdm.models", "qualname": "RawTCP.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.RawTCP.name", "modulename": "strongdm.models", "qualname": "RawTCP.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.RawTCP.port", "modulename": "strongdm.models", "qualname": "RawTCP.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RawTCP.port_override", "modulename": "strongdm.models", "qualname": "RawTCP.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.RawTCP.secret_store_id", "modulename": "strongdm.models", "qualname": "RawTCP.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.RawTCP.tags", "modulename": "strongdm.models", "qualname": "RawTCP.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.RawTCP.to_dict", "modulename": "strongdm.models", "qualname": "RawTCP.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RawTCP.from_dict", "modulename": "strongdm.models", "qualname": "RawTCP.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Redis", "modulename": "strongdm.models", "qualname": "Redis", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redis.__init__", "modulename": "strongdm.models", "qualname": "Redis.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    tls_required=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Redis.bind_interface", "modulename": "strongdm.models", "qualname": "Redis.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Redis.egress_filter", "modulename": "strongdm.models", "qualname": "Redis.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Redis.healthy", "modulename": "strongdm.models", "qualname": "Redis.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Redis.hostname", "modulename": "strongdm.models", "qualname": "Redis.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redis.id", "modulename": "strongdm.models", "qualname": "Redis.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Redis.name", "modulename": "strongdm.models", "qualname": "Redis.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Redis.password", "modulename": "strongdm.models", "qualname": "Redis.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redis.port", "modulename": "strongdm.models", "qualname": "Redis.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redis.port_override", "modulename": "strongdm.models", "qualname": "Redis.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redis.secret_store_id", "modulename": "strongdm.models", "qualname": "Redis.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Redis.tags", "modulename": "strongdm.models", "qualname": "Redis.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Redis.tls_required", "modulename": "strongdm.models", "qualname": "Redis.tls_required", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redis.username", "modulename": "strongdm.models", "qualname": "Redis.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redis.to_dict", "modulename": "strongdm.models", "qualname": "Redis.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Redis.from_dict", "modulename": "strongdm.models", "qualname": "Redis.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Redshift", "modulename": "strongdm.models", "qualname": "Redshift", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redshift.__init__", "modulename": "strongdm.models", "qualname": "Redshift.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    override_database=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Redshift.bind_interface", "modulename": "strongdm.models", "qualname": "Redshift.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Redshift.database", "modulename": "strongdm.models", "qualname": "Redshift.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redshift.egress_filter", "modulename": "strongdm.models", "qualname": "Redshift.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Redshift.healthy", "modulename": "strongdm.models", "qualname": "Redshift.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Redshift.hostname", "modulename": "strongdm.models", "qualname": "Redshift.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redshift.id", "modulename": "strongdm.models", "qualname": "Redshift.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Redshift.name", "modulename": "strongdm.models", "qualname": "Redshift.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Redshift.override_database", "modulename": "strongdm.models", "qualname": "Redshift.override_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redshift.password", "modulename": "strongdm.models", "qualname": "Redshift.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redshift.port", "modulename": "strongdm.models", "qualname": "Redshift.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redshift.port_override", "modulename": "strongdm.models", "qualname": "Redshift.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redshift.secret_store_id", "modulename": "strongdm.models", "qualname": "Redshift.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Redshift.tags", "modulename": "strongdm.models", "qualname": "Redshift.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Redshift.username", "modulename": "strongdm.models", "qualname": "Redshift.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Redshift.to_dict", "modulename": "strongdm.models", "qualname": "Redshift.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Redshift.from_dict", "modulename": "strongdm.models", "qualname": "Redshift.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Relay", "modulename": "strongdm.models", "qualname": "Relay", "type": "class", "doc": "<p>Relay represents a StrongDM CLI installation running in relay mode.</p>\n"}, {"fullname": "strongdm.models.Relay.__init__", "modulename": "strongdm.models", "qualname": "Relay.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    device=None,\n    gateway_filter=None,\n    id=None,\n    location=None,\n    name=None,\n    state=None,\n    tags=None,\n    version=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Relay.device", "modulename": "strongdm.models", "qualname": "Relay.device", "type": "variable", "doc": "<p>Device is a read only device name uploaded by the gateway process when \nit comes online.</p>\n"}, {"fullname": "strongdm.models.Relay.gateway_filter", "modulename": "strongdm.models", "qualname": "Relay.gateway_filter", "type": "variable", "doc": "<p>GatewayFilter can be used to restrict the peering between relays and\ngateways.</p>\n"}, {"fullname": "strongdm.models.Relay.id", "modulename": "strongdm.models", "qualname": "Relay.id", "type": "variable", "doc": "<p>Unique identifier of the Relay.</p>\n"}, {"fullname": "strongdm.models.Relay.location", "modulename": "strongdm.models", "qualname": "Relay.location", "type": "variable", "doc": "<p>Location is a read only network location uploaded by the gateway process\nwhen it comes online.</p>\n"}, {"fullname": "strongdm.models.Relay.name", "modulename": "strongdm.models", "qualname": "Relay.name", "type": "variable", "doc": "<p>Unique human-readable name of the Relay. Node names must include only letters, numbers, and hyphens (no spaces, underscores, or other special characters). Generated if not provided on create.</p>\n"}, {"fullname": "strongdm.models.Relay.state", "modulename": "strongdm.models", "qualname": "Relay.state", "type": "variable", "doc": "<p>The current state of the relay. One of: \"new\", \"verifying_restart\",\n\"awaiting_restart\", \"restarting\", \"started\", \"stopped\", \"dead\",\n\"unknown\".</p>\n"}, {"fullname": "strongdm.models.Relay.tags", "modulename": "strongdm.models", "qualname": "Relay.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Relay.version", "modulename": "strongdm.models", "qualname": "Relay.version", "type": "variable", "doc": "<p>Version is a read only sdm binary version uploaded by the gateway process\nwhen it comes online.</p>\n"}, {"fullname": "strongdm.models.Relay.to_dict", "modulename": "strongdm.models", "qualname": "Relay.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Relay.from_dict", "modulename": "strongdm.models", "qualname": "Relay.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentity", "modulename": "strongdm.models", "qualname": "RemoteIdentity", "type": "class", "doc": "<p>RemoteIdentities define the username to be used for a specific account\nwhen connecting to a remote resource using that group.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentity.__init__", "modulename": "strongdm.models", "qualname": "RemoteIdentity.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    account_id=None,\n    id=None,\n    remote_identity_group_id=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentity.account_id", "modulename": "strongdm.models", "qualname": "RemoteIdentity.account_id", "type": "variable", "doc": "<p>The account for this remote identity.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentity.id", "modulename": "strongdm.models", "qualname": "RemoteIdentity.id", "type": "variable", "doc": "<p>Unique identifier of the RemoteIdentity.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentity.remote_identity_group_id", "modulename": "strongdm.models", "qualname": "RemoteIdentity.remote_identity_group_id", "type": "variable", "doc": "<p>The remote identity group.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentity.username", "modulename": "strongdm.models", "qualname": "RemoteIdentity.username", "type": "variable", "doc": "<p>The username to be used as the remote identity for this account.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentity.to_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentity.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentity.from_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentity.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityCreateResponse", "modulename": "strongdm.models", "qualname": "RemoteIdentityCreateResponse", "type": "class", "doc": "<p>RemoteIdentityCreateResponse reports how the RemoteIdentities were created in the system.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityCreateResponse.__init__", "modulename": "strongdm.models", "qualname": "RemoteIdentityCreateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, remote_identity=None)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityCreateResponse.meta", "modulename": "strongdm.models", "qualname": "RemoteIdentityCreateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityCreateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "RemoteIdentityCreateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityCreateResponse.remote_identity", "modulename": "strongdm.models", "qualname": "RemoteIdentityCreateResponse.remote_identity", "type": "variable", "doc": "<p>The created RemoteIdentity.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityCreateResponse.to_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityCreateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityCreateResponse.from_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityCreateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityDeleteResponse", "modulename": "strongdm.models", "qualname": "RemoteIdentityDeleteResponse", "type": "class", "doc": "<p>RemoteIdentityDeleteResponse returns information about a RemoteIdentity that was deleted.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityDeleteResponse.__init__", "modulename": "strongdm.models", "qualname": "RemoteIdentityDeleteResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityDeleteResponse.meta", "modulename": "strongdm.models", "qualname": "RemoteIdentityDeleteResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityDeleteResponse.rate_limit", "modulename": "strongdm.models", "qualname": "RemoteIdentityDeleteResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityDeleteResponse.to_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityDeleteResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityDeleteResponse.from_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityDeleteResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityGetResponse", "modulename": "strongdm.models", "qualname": "RemoteIdentityGetResponse", "type": "class", "doc": "<p>RemoteIdentityGetResponse returns a requested RemoteIdentity.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityGetResponse.__init__", "modulename": "strongdm.models", "qualname": "RemoteIdentityGetResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, remote_identity=None)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityGetResponse.meta", "modulename": "strongdm.models", "qualname": "RemoteIdentityGetResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityGetResponse.rate_limit", "modulename": "strongdm.models", "qualname": "RemoteIdentityGetResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityGetResponse.remote_identity", "modulename": "strongdm.models", "qualname": "RemoteIdentityGetResponse.remote_identity", "type": "variable", "doc": "<p>The requested RemoteIdentity.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityGetResponse.to_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityGetResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityGetResponse.from_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityGetResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityGroup", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroup", "type": "class", "doc": "<p>A RemoteIdentityGroup defines a group of remote identities.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityGroup.__init__", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroup.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, id=None, name=None)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityGroup.id", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroup.id", "type": "variable", "doc": "<p>Unique identifier of the RemoteIdentityGroup.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityGroup.name", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroup.name", "type": "variable", "doc": "<p>Unique human-readable name of the RemoteIdentityGroup.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityGroup.to_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroup.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityGroup.from_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroup.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityGroupGetResponse", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroupGetResponse", "type": "class", "doc": "<p>RemoteIdentityGroupGetResponse returns a requested RemoteIdentityGroup.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityGroupGetResponse.__init__", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroupGetResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, remote_identity_group=None)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityGroupGetResponse.meta", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroupGetResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityGroupGetResponse.rate_limit", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroupGetResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityGroupGetResponse.remote_identity_group", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroupGetResponse.remote_identity_group", "type": "variable", "doc": "<p>The requested RemoteIdentityGroup.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityGroupGetResponse.to_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroupGetResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityGroupGetResponse.from_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityGroupGetResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityUpdateResponse", "modulename": "strongdm.models", "qualname": "RemoteIdentityUpdateResponse", "type": "class", "doc": "<p>RemoteIdentityUpdateResponse returns the fields of a RemoteIdentity after it has been updated by\na RemoteIdentityUpdateRequest.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityUpdateResponse.__init__", "modulename": "strongdm.models", "qualname": "RemoteIdentityUpdateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, remote_identity=None)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityUpdateResponse.meta", "modulename": "strongdm.models", "qualname": "RemoteIdentityUpdateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityUpdateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "RemoteIdentityUpdateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityUpdateResponse.remote_identity", "modulename": "strongdm.models", "qualname": "RemoteIdentityUpdateResponse.remote_identity", "type": "variable", "doc": "<p>The updated RemoteIdentity.</p>\n"}, {"fullname": "strongdm.models.RemoteIdentityUpdateResponse.to_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityUpdateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RemoteIdentityUpdateResponse.from_dict", "modulename": "strongdm.models", "qualname": "RemoteIdentityUpdateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceCreateResponse", "modulename": "strongdm.models", "qualname": "ResourceCreateResponse", "type": "class", "doc": "<p>ResourceCreateResponse reports how the Resources were created in the system.</p>\n"}, {"fullname": "strongdm.models.ResourceCreateResponse.__init__", "modulename": "strongdm.models", "qualname": "ResourceCreateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, resource=None)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceCreateResponse.meta", "modulename": "strongdm.models", "qualname": "ResourceCreateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.ResourceCreateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "ResourceCreateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.ResourceCreateResponse.resource", "modulename": "strongdm.models", "qualname": "ResourceCreateResponse.resource", "type": "variable", "doc": "<p>The created Resource.</p>\n"}, {"fullname": "strongdm.models.ResourceCreateResponse.to_dict", "modulename": "strongdm.models", "qualname": "ResourceCreateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceCreateResponse.from_dict", "modulename": "strongdm.models", "qualname": "ResourceCreateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceDeleteResponse", "modulename": "strongdm.models", "qualname": "ResourceDeleteResponse", "type": "class", "doc": "<p>ResourceDeleteResponse returns information about a Resource that was deleted.</p>\n"}, {"fullname": "strongdm.models.ResourceDeleteResponse.__init__", "modulename": "strongdm.models", "qualname": "ResourceDeleteResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceDeleteResponse.meta", "modulename": "strongdm.models", "qualname": "ResourceDeleteResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.ResourceDeleteResponse.rate_limit", "modulename": "strongdm.models", "qualname": "ResourceDeleteResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.ResourceDeleteResponse.to_dict", "modulename": "strongdm.models", "qualname": "ResourceDeleteResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceDeleteResponse.from_dict", "modulename": "strongdm.models", "qualname": "ResourceDeleteResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceGetResponse", "modulename": "strongdm.models", "qualname": "ResourceGetResponse", "type": "class", "doc": "<p>ResourceGetResponse returns a requested Resource.</p>\n"}, {"fullname": "strongdm.models.ResourceGetResponse.__init__", "modulename": "strongdm.models", "qualname": "ResourceGetResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, resource=None)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceGetResponse.meta", "modulename": "strongdm.models", "qualname": "ResourceGetResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.ResourceGetResponse.rate_limit", "modulename": "strongdm.models", "qualname": "ResourceGetResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.ResourceGetResponse.resource", "modulename": "strongdm.models", "qualname": "ResourceGetResponse.resource", "type": "variable", "doc": "<p>The requested Resource.</p>\n"}, {"fullname": "strongdm.models.ResourceGetResponse.to_dict", "modulename": "strongdm.models", "qualname": "ResourceGetResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceGetResponse.from_dict", "modulename": "strongdm.models", "qualname": "ResourceGetResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceUpdateResponse", "modulename": "strongdm.models", "qualname": "ResourceUpdateResponse", "type": "class", "doc": "<p>ResourceUpdateResponse returns the fields of a Resource after it has been updated by\na ResourceUpdateRequest.</p>\n"}, {"fullname": "strongdm.models.ResourceUpdateResponse.__init__", "modulename": "strongdm.models", "qualname": "ResourceUpdateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, resource=None)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceUpdateResponse.meta", "modulename": "strongdm.models", "qualname": "ResourceUpdateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.ResourceUpdateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "ResourceUpdateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.ResourceUpdateResponse.resource", "modulename": "strongdm.models", "qualname": "ResourceUpdateResponse.resource", "type": "variable", "doc": "<p>The updated Resource.</p>\n"}, {"fullname": "strongdm.models.ResourceUpdateResponse.to_dict", "modulename": "strongdm.models", "qualname": "ResourceUpdateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.ResourceUpdateResponse.from_dict", "modulename": "strongdm.models", "qualname": "ResourceUpdateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Role", "modulename": "strongdm.models", "qualname": "Role", "type": "class", "doc": "<p>A Role has a list of access rules which determine which Resources the members\nof the Role have access to. An Account can be a member of multiple Roles via\nAccountAttachments.</p>\n"}, {"fullname": "strongdm.models.Role.__init__", "modulename": "strongdm.models", "qualname": "Role.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    access_rules=None,\n    id=None,\n    managed_by=None,\n    name=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Role.access_rules", "modulename": "strongdm.models", "qualname": "Role.access_rules", "type": "variable", "doc": "<p>AccessRules is a list of access rules defining the resources this Role has access to.</p>\n"}, {"fullname": "strongdm.models.Role.id", "modulename": "strongdm.models", "qualname": "Role.id", "type": "variable", "doc": "<p>Unique identifier of the Role.</p>\n"}, {"fullname": "strongdm.models.Role.managed_by", "modulename": "strongdm.models", "qualname": "Role.managed_by", "type": "variable", "doc": "<p>Managed By is a read only field for what service manages this role, e.g. StrongDM, Okta, Azure.</p>\n"}, {"fullname": "strongdm.models.Role.name", "modulename": "strongdm.models", "qualname": "Role.name", "type": "variable", "doc": "<p>Unique human-readable name of the Role.</p>\n"}, {"fullname": "strongdm.models.Role.tags", "modulename": "strongdm.models", "qualname": "Role.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Role.to_dict", "modulename": "strongdm.models", "qualname": "Role.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Role.from_dict", "modulename": "strongdm.models", "qualname": "Role.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleCreateResponse", "modulename": "strongdm.models", "qualname": "RoleCreateResponse", "type": "class", "doc": "<p>RoleCreateResponse reports how the Roles were created in the system. It can\ncommunicate partial successes or failures.</p>\n"}, {"fullname": "strongdm.models.RoleCreateResponse.__init__", "modulename": "strongdm.models", "qualname": "RoleCreateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, role=None)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleCreateResponse.meta", "modulename": "strongdm.models", "qualname": "RoleCreateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.RoleCreateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "RoleCreateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.RoleCreateResponse.role", "modulename": "strongdm.models", "qualname": "RoleCreateResponse.role", "type": "variable", "doc": "<p>The created Role.</p>\n"}, {"fullname": "strongdm.models.RoleCreateResponse.to_dict", "modulename": "strongdm.models", "qualname": "RoleCreateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleCreateResponse.from_dict", "modulename": "strongdm.models", "qualname": "RoleCreateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleDeleteResponse", "modulename": "strongdm.models", "qualname": "RoleDeleteResponse", "type": "class", "doc": "<p>RoleDeleteResponse returns information about a Role that was deleted.</p>\n"}, {"fullname": "strongdm.models.RoleDeleteResponse.__init__", "modulename": "strongdm.models", "qualname": "RoleDeleteResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleDeleteResponse.meta", "modulename": "strongdm.models", "qualname": "RoleDeleteResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.RoleDeleteResponse.rate_limit", "modulename": "strongdm.models", "qualname": "RoleDeleteResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.RoleDeleteResponse.to_dict", "modulename": "strongdm.models", "qualname": "RoleDeleteResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleDeleteResponse.from_dict", "modulename": "strongdm.models", "qualname": "RoleDeleteResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleGetResponse", "modulename": "strongdm.models", "qualname": "RoleGetResponse", "type": "class", "doc": "<p>RoleGetResponse returns a requested Role.</p>\n"}, {"fullname": "strongdm.models.RoleGetResponse.__init__", "modulename": "strongdm.models", "qualname": "RoleGetResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, role=None)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleGetResponse.meta", "modulename": "strongdm.models", "qualname": "RoleGetResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.RoleGetResponse.rate_limit", "modulename": "strongdm.models", "qualname": "RoleGetResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.RoleGetResponse.role", "modulename": "strongdm.models", "qualname": "RoleGetResponse.role", "type": "variable", "doc": "<p>The requested Role.</p>\n"}, {"fullname": "strongdm.models.RoleGetResponse.to_dict", "modulename": "strongdm.models", "qualname": "RoleGetResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleGetResponse.from_dict", "modulename": "strongdm.models", "qualname": "RoleGetResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleUpdateResponse", "modulename": "strongdm.models", "qualname": "RoleUpdateResponse", "type": "class", "doc": "<p>RoleUpdateResponse returns the fields of a Role after it has been updated by\na RoleUpdateRequest.</p>\n"}, {"fullname": "strongdm.models.RoleUpdateResponse.__init__", "modulename": "strongdm.models", "qualname": "RoleUpdateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, role=None)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleUpdateResponse.meta", "modulename": "strongdm.models", "qualname": "RoleUpdateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.RoleUpdateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "RoleUpdateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.RoleUpdateResponse.role", "modulename": "strongdm.models", "qualname": "RoleUpdateResponse.role", "type": "variable", "doc": "<p>The updated Role.</p>\n"}, {"fullname": "strongdm.models.RoleUpdateResponse.to_dict", "modulename": "strongdm.models", "qualname": "RoleUpdateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.RoleUpdateResponse.from_dict", "modulename": "strongdm.models", "qualname": "RoleUpdateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.SQLServer", "modulename": "strongdm.models", "qualname": "SQLServer", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SQLServer.__init__", "modulename": "strongdm.models", "qualname": "SQLServer.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    override_database=None,\n    password=None,\n    port=None,\n    port_override=None,\n    schema=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.SQLServer.bind_interface", "modulename": "strongdm.models", "qualname": "SQLServer.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.SQLServer.database", "modulename": "strongdm.models", "qualname": "SQLServer.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SQLServer.egress_filter", "modulename": "strongdm.models", "qualname": "SQLServer.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.SQLServer.healthy", "modulename": "strongdm.models", "qualname": "SQLServer.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.SQLServer.hostname", "modulename": "strongdm.models", "qualname": "SQLServer.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SQLServer.id", "modulename": "strongdm.models", "qualname": "SQLServer.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.SQLServer.name", "modulename": "strongdm.models", "qualname": "SQLServer.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.SQLServer.override_database", "modulename": "strongdm.models", "qualname": "SQLServer.override_database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SQLServer.password", "modulename": "strongdm.models", "qualname": "SQLServer.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SQLServer.port", "modulename": "strongdm.models", "qualname": "SQLServer.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SQLServer.port_override", "modulename": "strongdm.models", "qualname": "SQLServer.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SQLServer.schema", "modulename": "strongdm.models", "qualname": "SQLServer.schema", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SQLServer.secret_store_id", "modulename": "strongdm.models", "qualname": "SQLServer.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.SQLServer.tags", "modulename": "strongdm.models", "qualname": "SQLServer.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.SQLServer.username", "modulename": "strongdm.models", "qualname": "SQLServer.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SQLServer.to_dict", "modulename": "strongdm.models", "qualname": "SQLServer.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.SQLServer.from_dict", "modulename": "strongdm.models", "qualname": "SQLServer.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.SSH", "modulename": "strongdm.models", "qualname": "SSH", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSH.__init__", "modulename": "strongdm.models", "qualname": "SSH.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    allow_deprecated_key_exchanges=None,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    key_type=None,\n    name=None,\n    port=None,\n    port_forwarding=None,\n    port_override=None,\n    public_key=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.SSH.allow_deprecated_key_exchanges", "modulename": "strongdm.models", "qualname": "SSH.allow_deprecated_key_exchanges", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSH.bind_interface", "modulename": "strongdm.models", "qualname": "SSH.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.SSH.egress_filter", "modulename": "strongdm.models", "qualname": "SSH.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.SSH.healthy", "modulename": "strongdm.models", "qualname": "SSH.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.SSH.hostname", "modulename": "strongdm.models", "qualname": "SSH.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSH.id", "modulename": "strongdm.models", "qualname": "SSH.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.SSH.key_type", "modulename": "strongdm.models", "qualname": "SSH.key_type", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSH.name", "modulename": "strongdm.models", "qualname": "SSH.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.SSH.port", "modulename": "strongdm.models", "qualname": "SSH.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSH.port_forwarding", "modulename": "strongdm.models", "qualname": "SSH.port_forwarding", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSH.port_override", "modulename": "strongdm.models", "qualname": "SSH.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSH.public_key", "modulename": "strongdm.models", "qualname": "SSH.public_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSH.secret_store_id", "modulename": "strongdm.models", "qualname": "SSH.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.SSH.tags", "modulename": "strongdm.models", "qualname": "SSH.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.SSH.username", "modulename": "strongdm.models", "qualname": "SSH.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSH.to_dict", "modulename": "strongdm.models", "qualname": "SSH.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.SSH.from_dict", "modulename": "strongdm.models", "qualname": "SSH.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.SSHCert", "modulename": "strongdm.models", "qualname": "SSHCert", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCert.__init__", "modulename": "strongdm.models", "qualname": "SSHCert.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    allow_deprecated_key_exchanges=None,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    key_type=None,\n    name=None,\n    port=None,\n    port_forwarding=None,\n    port_override=None,\n    remote_identity_group_id=None,\n    remote_identity_healthcheck_username=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.SSHCert.allow_deprecated_key_exchanges", "modulename": "strongdm.models", "qualname": "SSHCert.allow_deprecated_key_exchanges", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCert.bind_interface", "modulename": "strongdm.models", "qualname": "SSHCert.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.SSHCert.egress_filter", "modulename": "strongdm.models", "qualname": "SSHCert.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.SSHCert.healthy", "modulename": "strongdm.models", "qualname": "SSHCert.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.SSHCert.hostname", "modulename": "strongdm.models", "qualname": "SSHCert.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCert.id", "modulename": "strongdm.models", "qualname": "SSHCert.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.SSHCert.key_type", "modulename": "strongdm.models", "qualname": "SSHCert.key_type", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCert.name", "modulename": "strongdm.models", "qualname": "SSHCert.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.SSHCert.port", "modulename": "strongdm.models", "qualname": "SSHCert.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCert.port_forwarding", "modulename": "strongdm.models", "qualname": "SSHCert.port_forwarding", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCert.port_override", "modulename": "strongdm.models", "qualname": "SSHCert.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCert.remote_identity_group_id", "modulename": "strongdm.models", "qualname": "SSHCert.remote_identity_group_id", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCert.remote_identity_healthcheck_username", "modulename": "strongdm.models", "qualname": "SSHCert.remote_identity_healthcheck_username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCert.secret_store_id", "modulename": "strongdm.models", "qualname": "SSHCert.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.SSHCert.tags", "modulename": "strongdm.models", "qualname": "SSHCert.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.SSHCert.username", "modulename": "strongdm.models", "qualname": "SSHCert.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCert.to_dict", "modulename": "strongdm.models", "qualname": "SSHCert.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.SSHCert.from_dict", "modulename": "strongdm.models", "qualname": "SSHCert.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.SSHCustomerKey", "modulename": "strongdm.models", "qualname": "SSHCustomerKey", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.__init__", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    allow_deprecated_key_exchanges=None,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    port=None,\n    port_forwarding=None,\n    port_override=None,\n    private_key=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.SSHCustomerKey.allow_deprecated_key_exchanges", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.allow_deprecated_key_exchanges", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.bind_interface", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.egress_filter", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.healthy", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.hostname", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.id", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.name", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.port", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.port_forwarding", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.port_forwarding", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.port_override", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.private_key", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.private_key", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.secret_store_id", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.tags", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.username", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SSHCustomerKey.to_dict", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.SSHCustomerKey.from_dict", "modulename": "strongdm.models", "qualname": "SSHCustomerKey.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreCreateResponse", "modulename": "strongdm.models", "qualname": "SecretStoreCreateResponse", "type": "class", "doc": "<p>SecretStoreCreateResponse reports how the SecretStores were created in the system.</p>\n"}, {"fullname": "strongdm.models.SecretStoreCreateResponse.__init__", "modulename": "strongdm.models", "qualname": "SecretStoreCreateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, secret_store=None)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreCreateResponse.meta", "modulename": "strongdm.models", "qualname": "SecretStoreCreateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.SecretStoreCreateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "SecretStoreCreateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.SecretStoreCreateResponse.secret_store", "modulename": "strongdm.models", "qualname": "SecretStoreCreateResponse.secret_store", "type": "variable", "doc": "<p>The created SecretStore.</p>\n"}, {"fullname": "strongdm.models.SecretStoreCreateResponse.to_dict", "modulename": "strongdm.models", "qualname": "SecretStoreCreateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreCreateResponse.from_dict", "modulename": "strongdm.models", "qualname": "SecretStoreCreateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreDeleteResponse", "modulename": "strongdm.models", "qualname": "SecretStoreDeleteResponse", "type": "class", "doc": "<p>SecretStoreDeleteResponse returns information about a SecretStore that was deleted.</p>\n"}, {"fullname": "strongdm.models.SecretStoreDeleteResponse.__init__", "modulename": "strongdm.models", "qualname": "SecretStoreDeleteResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreDeleteResponse.meta", "modulename": "strongdm.models", "qualname": "SecretStoreDeleteResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.SecretStoreDeleteResponse.rate_limit", "modulename": "strongdm.models", "qualname": "SecretStoreDeleteResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.SecretStoreDeleteResponse.to_dict", "modulename": "strongdm.models", "qualname": "SecretStoreDeleteResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreDeleteResponse.from_dict", "modulename": "strongdm.models", "qualname": "SecretStoreDeleteResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreGetResponse", "modulename": "strongdm.models", "qualname": "SecretStoreGetResponse", "type": "class", "doc": "<p>SecretStoreGetResponse returns a requested SecretStore.</p>\n"}, {"fullname": "strongdm.models.SecretStoreGetResponse.__init__", "modulename": "strongdm.models", "qualname": "SecretStoreGetResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, secret_store=None)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreGetResponse.meta", "modulename": "strongdm.models", "qualname": "SecretStoreGetResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.SecretStoreGetResponse.rate_limit", "modulename": "strongdm.models", "qualname": "SecretStoreGetResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.SecretStoreGetResponse.secret_store", "modulename": "strongdm.models", "qualname": "SecretStoreGetResponse.secret_store", "type": "variable", "doc": "<p>The requested SecretStore.</p>\n"}, {"fullname": "strongdm.models.SecretStoreGetResponse.to_dict", "modulename": "strongdm.models", "qualname": "SecretStoreGetResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreGetResponse.from_dict", "modulename": "strongdm.models", "qualname": "SecretStoreGetResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreUpdateResponse", "modulename": "strongdm.models", "qualname": "SecretStoreUpdateResponse", "type": "class", "doc": "<p>SecretStoreUpdateResponse returns the fields of a SecretStore after it has been updated by\na SecretStoreUpdateRequest.</p>\n"}, {"fullname": "strongdm.models.SecretStoreUpdateResponse.__init__", "modulename": "strongdm.models", "qualname": "SecretStoreUpdateResponse.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, meta=None, rate_limit=None, secret_store=None)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreUpdateResponse.meta", "modulename": "strongdm.models", "qualname": "SecretStoreUpdateResponse.meta", "type": "variable", "doc": "<p>Reserved for future use.</p>\n"}, {"fullname": "strongdm.models.SecretStoreUpdateResponse.rate_limit", "modulename": "strongdm.models", "qualname": "SecretStoreUpdateResponse.rate_limit", "type": "variable", "doc": "<p>Rate limit information.</p>\n"}, {"fullname": "strongdm.models.SecretStoreUpdateResponse.secret_store", "modulename": "strongdm.models", "qualname": "SecretStoreUpdateResponse.secret_store", "type": "variable", "doc": "<p>The updated SecretStore.</p>\n"}, {"fullname": "strongdm.models.SecretStoreUpdateResponse.to_dict", "modulename": "strongdm.models", "qualname": "SecretStoreUpdateResponse.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.SecretStoreUpdateResponse.from_dict", "modulename": "strongdm.models", "qualname": "SecretStoreUpdateResponse.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Service", "modulename": "strongdm.models", "qualname": "Service", "type": "class", "doc": "<p>A Service is a service account that can connect to resources they are granted\ndirectly, or granted via roles. Services are typically automated jobs.</p>\n"}, {"fullname": "strongdm.models.Service.__init__", "modulename": "strongdm.models", "qualname": "Service.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, id=None, name=None, suspended=None, tags=None)", "funcdef": "def"}, {"fullname": "strongdm.models.Service.id", "modulename": "strongdm.models", "qualname": "Service.id", "type": "variable", "doc": "<p>Unique identifier of the Service.</p>\n"}, {"fullname": "strongdm.models.Service.name", "modulename": "strongdm.models", "qualname": "Service.name", "type": "variable", "doc": "<p>Unique human-readable name of the Service.</p>\n"}, {"fullname": "strongdm.models.Service.suspended", "modulename": "strongdm.models", "qualname": "Service.suspended", "type": "variable", "doc": "<p>The Service's suspended state.</p>\n"}, {"fullname": "strongdm.models.Service.tags", "modulename": "strongdm.models", "qualname": "Service.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Service.to_dict", "modulename": "strongdm.models", "qualname": "Service.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Service.from_dict", "modulename": "strongdm.models", "qualname": "Service.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.SingleStore", "modulename": "strongdm.models", "qualname": "SingleStore", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SingleStore.__init__", "modulename": "strongdm.models", "qualname": "SingleStore.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.SingleStore.bind_interface", "modulename": "strongdm.models", "qualname": "SingleStore.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.SingleStore.database", "modulename": "strongdm.models", "qualname": "SingleStore.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SingleStore.egress_filter", "modulename": "strongdm.models", "qualname": "SingleStore.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.SingleStore.healthy", "modulename": "strongdm.models", "qualname": "SingleStore.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.SingleStore.hostname", "modulename": "strongdm.models", "qualname": "SingleStore.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SingleStore.id", "modulename": "strongdm.models", "qualname": "SingleStore.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.SingleStore.name", "modulename": "strongdm.models", "qualname": "SingleStore.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.SingleStore.password", "modulename": "strongdm.models", "qualname": "SingleStore.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SingleStore.port", "modulename": "strongdm.models", "qualname": "SingleStore.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SingleStore.port_override", "modulename": "strongdm.models", "qualname": "SingleStore.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SingleStore.secret_store_id", "modulename": "strongdm.models", "qualname": "SingleStore.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.SingleStore.tags", "modulename": "strongdm.models", "qualname": "SingleStore.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.SingleStore.username", "modulename": "strongdm.models", "qualname": "SingleStore.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SingleStore.to_dict", "modulename": "strongdm.models", "qualname": "SingleStore.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.SingleStore.from_dict", "modulename": "strongdm.models", "qualname": "SingleStore.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Snowflake", "modulename": "strongdm.models", "qualname": "Snowflake", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Snowflake.__init__", "modulename": "strongdm.models", "qualname": "Snowflake.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    database=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port_override=None,\n    schema=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Snowflake.bind_interface", "modulename": "strongdm.models", "qualname": "Snowflake.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Snowflake.database", "modulename": "strongdm.models", "qualname": "Snowflake.database", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Snowflake.egress_filter", "modulename": "strongdm.models", "qualname": "Snowflake.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Snowflake.healthy", "modulename": "strongdm.models", "qualname": "Snowflake.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Snowflake.hostname", "modulename": "strongdm.models", "qualname": "Snowflake.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Snowflake.id", "modulename": "strongdm.models", "qualname": "Snowflake.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Snowflake.name", "modulename": "strongdm.models", "qualname": "Snowflake.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Snowflake.password", "modulename": "strongdm.models", "qualname": "Snowflake.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Snowflake.port_override", "modulename": "strongdm.models", "qualname": "Snowflake.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Snowflake.schema", "modulename": "strongdm.models", "qualname": "Snowflake.schema", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Snowflake.secret_store_id", "modulename": "strongdm.models", "qualname": "Snowflake.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Snowflake.tags", "modulename": "strongdm.models", "qualname": "Snowflake.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Snowflake.username", "modulename": "strongdm.models", "qualname": "Snowflake.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Snowflake.to_dict", "modulename": "strongdm.models", "qualname": "Snowflake.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Snowflake.from_dict", "modulename": "strongdm.models", "qualname": "Snowflake.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Snowsight", "modulename": "strongdm.models", "qualname": "Snowsight", "type": "class", "doc": "<p>Snowsight is currently unstable, and its API may change, or it may be removed,\nwithout a major version bump.</p>\n"}, {"fullname": "strongdm.models.Snowsight.__init__", "modulename": "strongdm.models", "qualname": "Snowsight.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthcheck_username=None,\n    healthy=None,\n    id=None,\n    name=None,\n    port_override=None,\n    samlmetadata=None,\n    secret_store_id=None,\n    subdomain=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Snowsight.bind_interface", "modulename": "strongdm.models", "qualname": "Snowsight.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Snowsight.egress_filter", "modulename": "strongdm.models", "qualname": "Snowsight.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Snowsight.healthcheck_username", "modulename": "strongdm.models", "qualname": "Snowsight.healthcheck_username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Snowsight.healthy", "modulename": "strongdm.models", "qualname": "Snowsight.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Snowsight.id", "modulename": "strongdm.models", "qualname": "Snowsight.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Snowsight.name", "modulename": "strongdm.models", "qualname": "Snowsight.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Snowsight.port_override", "modulename": "strongdm.models", "qualname": "Snowsight.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Snowsight.samlmetadata", "modulename": "strongdm.models", "qualname": "Snowsight.samlmetadata", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Snowsight.secret_store_id", "modulename": "strongdm.models", "qualname": "Snowsight.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Snowsight.subdomain", "modulename": "strongdm.models", "qualname": "Snowsight.subdomain", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Snowsight.tags", "modulename": "strongdm.models", "qualname": "Snowsight.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Snowsight.to_dict", "modulename": "strongdm.models", "qualname": "Snowsight.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Snowsight.from_dict", "modulename": "strongdm.models", "qualname": "Snowsight.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Sybase", "modulename": "strongdm.models", "qualname": "Sybase", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Sybase.__init__", "modulename": "strongdm.models", "qualname": "Sybase.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Sybase.bind_interface", "modulename": "strongdm.models", "qualname": "Sybase.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Sybase.egress_filter", "modulename": "strongdm.models", "qualname": "Sybase.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Sybase.healthy", "modulename": "strongdm.models", "qualname": "Sybase.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Sybase.hostname", "modulename": "strongdm.models", "qualname": "Sybase.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Sybase.id", "modulename": "strongdm.models", "qualname": "Sybase.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Sybase.name", "modulename": "strongdm.models", "qualname": "Sybase.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Sybase.password", "modulename": "strongdm.models", "qualname": "Sybase.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Sybase.port", "modulename": "strongdm.models", "qualname": "Sybase.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Sybase.port_override", "modulename": "strongdm.models", "qualname": "Sybase.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Sybase.secret_store_id", "modulename": "strongdm.models", "qualname": "Sybase.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Sybase.tags", "modulename": "strongdm.models", "qualname": "Sybase.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Sybase.username", "modulename": "strongdm.models", "qualname": "Sybase.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Sybase.to_dict", "modulename": "strongdm.models", "qualname": "Sybase.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Sybase.from_dict", "modulename": "strongdm.models", "qualname": "Sybase.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.SybaseIQ", "modulename": "strongdm.models", "qualname": "SybaseIQ", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SybaseIQ.__init__", "modulename": "strongdm.models", "qualname": "SybaseIQ.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.SybaseIQ.bind_interface", "modulename": "strongdm.models", "qualname": "SybaseIQ.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.SybaseIQ.egress_filter", "modulename": "strongdm.models", "qualname": "SybaseIQ.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.SybaseIQ.healthy", "modulename": "strongdm.models", "qualname": "SybaseIQ.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.SybaseIQ.hostname", "modulename": "strongdm.models", "qualname": "SybaseIQ.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SybaseIQ.id", "modulename": "strongdm.models", "qualname": "SybaseIQ.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.SybaseIQ.name", "modulename": "strongdm.models", "qualname": "SybaseIQ.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.SybaseIQ.password", "modulename": "strongdm.models", "qualname": "SybaseIQ.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SybaseIQ.port", "modulename": "strongdm.models", "qualname": "SybaseIQ.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SybaseIQ.port_override", "modulename": "strongdm.models", "qualname": "SybaseIQ.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SybaseIQ.secret_store_id", "modulename": "strongdm.models", "qualname": "SybaseIQ.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.SybaseIQ.tags", "modulename": "strongdm.models", "qualname": "SybaseIQ.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.SybaseIQ.username", "modulename": "strongdm.models", "qualname": "SybaseIQ.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.SybaseIQ.to_dict", "modulename": "strongdm.models", "qualname": "SybaseIQ.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.SybaseIQ.from_dict", "modulename": "strongdm.models", "qualname": "SybaseIQ.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Tag", "modulename": "strongdm.models", "qualname": "Tag", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Tag.__init__", "modulename": "strongdm.models", "qualname": "Tag.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, name=None, value=None)", "funcdef": "def"}, {"fullname": "strongdm.models.Tag.name", "modulename": "strongdm.models", "qualname": "Tag.name", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Tag.value", "modulename": "strongdm.models", "qualname": "Tag.value", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Tag.to_dict", "modulename": "strongdm.models", "qualname": "Tag.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Tag.from_dict", "modulename": "strongdm.models", "qualname": "Tag.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.Teradata", "modulename": "strongdm.models", "qualname": "Teradata", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Teradata.__init__", "modulename": "strongdm.models", "qualname": "Teradata.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    bind_interface=None,\n    egress_filter=None,\n    healthy=None,\n    hostname=None,\n    id=None,\n    name=None,\n    password=None,\n    port=None,\n    port_override=None,\n    secret_store_id=None,\n    tags=None,\n    username=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.Teradata.bind_interface", "modulename": "strongdm.models", "qualname": "Teradata.bind_interface", "type": "variable", "doc": "<p>Bind interface</p>\n"}, {"fullname": "strongdm.models.Teradata.egress_filter", "modulename": "strongdm.models", "qualname": "Teradata.egress_filter", "type": "variable", "doc": "<p>A filter applied to the routing logic to pin datasource to nodes.</p>\n"}, {"fullname": "strongdm.models.Teradata.healthy", "modulename": "strongdm.models", "qualname": "Teradata.healthy", "type": "variable", "doc": "<p>True if the datasource is reachable and the credentials are valid.</p>\n"}, {"fullname": "strongdm.models.Teradata.hostname", "modulename": "strongdm.models", "qualname": "Teradata.hostname", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Teradata.id", "modulename": "strongdm.models", "qualname": "Teradata.id", "type": "variable", "doc": "<p>Unique identifier of the Resource.</p>\n"}, {"fullname": "strongdm.models.Teradata.name", "modulename": "strongdm.models", "qualname": "Teradata.name", "type": "variable", "doc": "<p>Unique human-readable name of the Resource.</p>\n"}, {"fullname": "strongdm.models.Teradata.password", "modulename": "strongdm.models", "qualname": "Teradata.password", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Teradata.port", "modulename": "strongdm.models", "qualname": "Teradata.port", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Teradata.port_override", "modulename": "strongdm.models", "qualname": "Teradata.port_override", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Teradata.secret_store_id", "modulename": "strongdm.models", "qualname": "Teradata.secret_store_id", "type": "variable", "doc": "<p>ID of the secret store containing credentials for this resource, if any.</p>\n"}, {"fullname": "strongdm.models.Teradata.tags", "modulename": "strongdm.models", "qualname": "Teradata.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.Teradata.username", "modulename": "strongdm.models", "qualname": "Teradata.username", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.Teradata.to_dict", "modulename": "strongdm.models", "qualname": "Teradata.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.Teradata.from_dict", "modulename": "strongdm.models", "qualname": "Teradata.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.UpdateResponseMetadata", "modulename": "strongdm.models", "qualname": "UpdateResponseMetadata", "type": "class", "doc": "<p>UpdateResponseMetadata is reserved for future use.</p>\n"}, {"fullname": "strongdm.models.UpdateResponseMetadata.__init__", "modulename": "strongdm.models", "qualname": "UpdateResponseMetadata.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.UpdateResponseMetadata.to_dict", "modulename": "strongdm.models", "qualname": "UpdateResponseMetadata.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.UpdateResponseMetadata.from_dict", "modulename": "strongdm.models", "qualname": "UpdateResponseMetadata.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.User", "modulename": "strongdm.models", "qualname": "User", "type": "class", "doc": "<p>A User can connect to resources they are granted directly, or granted\nvia roles.</p>\n"}, {"fullname": "strongdm.models.User.__init__", "modulename": "strongdm.models", "qualname": "User.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    email=None,\n    external_id=None,\n    first_name=None,\n    id=None,\n    last_name=None,\n    managed_by=None,\n    permission_level=None,\n    suspended=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.User.email", "modulename": "strongdm.models", "qualname": "User.email", "type": "variable", "doc": "<p>The User's email address. Must be unique.</p>\n"}, {"fullname": "strongdm.models.User.external_id", "modulename": "strongdm.models", "qualname": "User.external_id", "type": "variable", "doc": "<p>External ID is an alternative unique ID this user is represented by within an external service.</p>\n"}, {"fullname": "strongdm.models.User.first_name", "modulename": "strongdm.models", "qualname": "User.first_name", "type": "variable", "doc": "<p>The User's first name.</p>\n"}, {"fullname": "strongdm.models.User.id", "modulename": "strongdm.models", "qualname": "User.id", "type": "variable", "doc": "<p>Unique identifier of the User.</p>\n"}, {"fullname": "strongdm.models.User.last_name", "modulename": "strongdm.models", "qualname": "User.last_name", "type": "variable", "doc": "<p>The User's last name.</p>\n"}, {"fullname": "strongdm.models.User.managed_by", "modulename": "strongdm.models", "qualname": "User.managed_by", "type": "variable", "doc": "<p>Managed By is a read only field for what service manages this user, e.g. StrongDM, Okta, Azure.</p>\n"}, {"fullname": "strongdm.models.User.permission_level", "modulename": "strongdm.models", "qualname": "User.permission_level", "type": "variable", "doc": "<p>PermissionLevel is a read only field for the user's permission level e.g. admin, DBA, user.</p>\n"}, {"fullname": "strongdm.models.User.suspended", "modulename": "strongdm.models", "qualname": "User.suspended", "type": "variable", "doc": "<p>The User's suspended state.</p>\n"}, {"fullname": "strongdm.models.User.tags", "modulename": "strongdm.models", "qualname": "User.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.User.to_dict", "modulename": "strongdm.models", "qualname": "User.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.User.from_dict", "modulename": "strongdm.models", "qualname": "User.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.VaultAppRoleStore", "modulename": "strongdm.models", "qualname": "VaultAppRoleStore", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultAppRoleStore.__init__", "modulename": "strongdm.models", "qualname": "VaultAppRoleStore.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    id=None,\n    name=None,\n    namespace=None,\n    server_address=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.VaultAppRoleStore.id", "modulename": "strongdm.models", "qualname": "VaultAppRoleStore.id", "type": "variable", "doc": "<p>Unique identifier of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.VaultAppRoleStore.name", "modulename": "strongdm.models", "qualname": "VaultAppRoleStore.name", "type": "variable", "doc": "<p>Unique human-readable name of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.VaultAppRoleStore.namespace", "modulename": "strongdm.models", "qualname": "VaultAppRoleStore.namespace", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultAppRoleStore.server_address", "modulename": "strongdm.models", "qualname": "VaultAppRoleStore.server_address", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultAppRoleStore.tags", "modulename": "strongdm.models", "qualname": "VaultAppRoleStore.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.VaultAppRoleStore.to_dict", "modulename": "strongdm.models", "qualname": "VaultAppRoleStore.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.VaultAppRoleStore.from_dict", "modulename": "strongdm.models", "qualname": "VaultAppRoleStore.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.VaultTLSStore", "modulename": "strongdm.models", "qualname": "VaultTLSStore", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultTLSStore.__init__", "modulename": "strongdm.models", "qualname": "VaultTLSStore.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    ca_cert_path=None,\n    client_cert_path=None,\n    client_key_path=None,\n    id=None,\n    name=None,\n    namespace=None,\n    server_address=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.VaultTLSStore.ca_cert_path", "modulename": "strongdm.models", "qualname": "VaultTLSStore.ca_cert_path", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultTLSStore.client_cert_path", "modulename": "strongdm.models", "qualname": "VaultTLSStore.client_cert_path", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultTLSStore.client_key_path", "modulename": "strongdm.models", "qualname": "VaultTLSStore.client_key_path", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultTLSStore.id", "modulename": "strongdm.models", "qualname": "VaultTLSStore.id", "type": "variable", "doc": "<p>Unique identifier of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.VaultTLSStore.name", "modulename": "strongdm.models", "qualname": "VaultTLSStore.name", "type": "variable", "doc": "<p>Unique human-readable name of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.VaultTLSStore.namespace", "modulename": "strongdm.models", "qualname": "VaultTLSStore.namespace", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultTLSStore.server_address", "modulename": "strongdm.models", "qualname": "VaultTLSStore.server_address", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultTLSStore.tags", "modulename": "strongdm.models", "qualname": "VaultTLSStore.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.VaultTLSStore.to_dict", "modulename": "strongdm.models", "qualname": "VaultTLSStore.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.VaultTLSStore.from_dict", "modulename": "strongdm.models", "qualname": "VaultTLSStore.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.models.VaultTokenStore", "modulename": "strongdm.models", "qualname": "VaultTokenStore", "type": "class", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultTokenStore.__init__", "modulename": "strongdm.models", "qualname": "VaultTokenStore.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(\n    self,\n    id=None,\n    name=None,\n    namespace=None,\n    server_address=None,\n    tags=None\n)", "funcdef": "def"}, {"fullname": "strongdm.models.VaultTokenStore.id", "modulename": "strongdm.models", "qualname": "VaultTokenStore.id", "type": "variable", "doc": "<p>Unique identifier of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.VaultTokenStore.name", "modulename": "strongdm.models", "qualname": "VaultTokenStore.name", "type": "variable", "doc": "<p>Unique human-readable name of the SecretStore.</p>\n"}, {"fullname": "strongdm.models.VaultTokenStore.namespace", "modulename": "strongdm.models", "qualname": "VaultTokenStore.namespace", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultTokenStore.server_address", "modulename": "strongdm.models", "qualname": "VaultTokenStore.server_address", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "strongdm.models.VaultTokenStore.tags", "modulename": "strongdm.models", "qualname": "VaultTokenStore.tags", "type": "variable", "doc": "<p>Tags is a map of key, value pairs.</p>\n"}, {"fullname": "strongdm.models.VaultTokenStore.to_dict", "modulename": "strongdm.models", "qualname": "VaultTokenStore.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "strongdm.models.VaultTokenStore.from_dict", "modulename": "strongdm.models", "qualname": "VaultTokenStore.from_dict", "type": "function", "doc": "<p></p>\n", "signature": "(cls, d)", "funcdef": "def"}, {"fullname": "strongdm.svc", "modulename": "strongdm.svc", "type": "module", "doc": "<p></p>\n"}, {"fullname": "strongdm.svc.deprecated", "modulename": "strongdm.svc", "qualname": "deprecated", "type": "function", "doc": "<p>This is a decorator which can be used to mark functions\nas deprecated. It will result in a warning being emitted\nwhen the function is used.</p>\n", "signature": "(func)", "funcdef": "def"}, {"fullname": "strongdm.svc.AccountAttachments", "modulename": "strongdm.svc", "qualname": "AccountAttachments", "type": "class", "doc": "<p>AccountAttachments assign an account to a role.\nSee <code>strongdm.models.AccountAttachment</code>.</p>\n"}, {"fullname": "strongdm.svc.AccountAttachments.__init__", "modulename": "strongdm.svc", "qualname": "AccountAttachments.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, channel, client)", "funcdef": "def"}, {"fullname": "strongdm.svc.AccountAttachments.create", "modulename": "strongdm.svc", "qualname": "AccountAttachments.create", "type": "function", "doc": "<p>Create registers a new AccountAttachment.</p>\n", "signature": "(self, account_attachment, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.AccountAttachments.get", "modulename": "strongdm.svc", "qualname": "AccountAttachments.get", "type": "function", "doc": "<p>Get reads one AccountAttachment by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.AccountAttachments.delete", "modulename": "strongdm.svc", "qualname": "AccountAttachments.delete", "type": "function", "doc": "<p>Delete removes a AccountAttachment by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.AccountAttachments.list", "modulename": "strongdm.svc", "qualname": "AccountAttachments.list", "type": "function", "doc": "<p>List gets a list of AccountAttachments matching a given set of criteria.</p>\n", "signature": "(self, filter, *args, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.AccountGrants", "modulename": "strongdm.svc", "qualname": "AccountGrants", "type": "class", "doc": "<p>AccountGrants assign a resource directly to an account, giving the account the permission to connect to that resource.\nSee <code>strongdm.models.AccountGrant</code>.</p>\n"}, {"fullname": "strongdm.svc.AccountGrants.__init__", "modulename": "strongdm.svc", "qualname": "AccountGrants.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, channel, client)", "funcdef": "def"}, {"fullname": "strongdm.svc.AccountGrants.create", "modulename": "strongdm.svc", "qualname": "AccountGrants.create", "type": "function", "doc": "<p>Create registers a new AccountGrant.</p>\n", "signature": "(self, account_grant, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.AccountGrants.get", "modulename": "strongdm.svc", "qualname": "AccountGrants.get", "type": "function", "doc": "<p>Get reads one AccountGrant by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.AccountGrants.delete", "modulename": "strongdm.svc", "qualname": "AccountGrants.delete", "type": "function", "doc": "<p>Delete removes a AccountGrant by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.AccountGrants.list", "modulename": "strongdm.svc", "qualname": "AccountGrants.list", "type": "function", "doc": "<p>List gets a list of AccountGrants matching a given set of criteria.</p>\n", "signature": "(self, filter, *args, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Accounts", "modulename": "strongdm.svc", "qualname": "Accounts", "type": "class", "doc": "<p>Accounts are users that have access to strongDM. There are two types of accounts:</p>\n\n<ol>\n<li><strong>Users:</strong> humans who are authenticated through username and password or SSO.</li>\n<li><strong>Service Accounts:</strong> machines that are authenticated using a service token.\nSee:\n<code>strongdm.models.Service</code>\n<code>strongdm.models.User</code></li>\n</ol>\n"}, {"fullname": "strongdm.svc.Accounts.__init__", "modulename": "strongdm.svc", "qualname": "Accounts.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, channel, client)", "funcdef": "def"}, {"fullname": "strongdm.svc.Accounts.create", "modulename": "strongdm.svc", "qualname": "Accounts.create", "type": "function", "doc": "<p>Create registers a new Account.</p>\n", "signature": "(self, account, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Accounts.get", "modulename": "strongdm.svc", "qualname": "Accounts.get", "type": "function", "doc": "<p>Get reads one Account by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Accounts.update", "modulename": "strongdm.svc", "qualname": "Accounts.update", "type": "function", "doc": "<p>Update replaces all the fields of an Account by ID.</p>\n", "signature": "(self, account, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Accounts.delete", "modulename": "strongdm.svc", "qualname": "Accounts.delete", "type": "function", "doc": "<p>Delete removes an Account by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Accounts.list", "modulename": "strongdm.svc", "qualname": "Accounts.list", "type": "function", "doc": "<p>List gets a list of Accounts matching a given set of criteria.</p>\n", "signature": "(self, filter, *args, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.ControlPanel", "modulename": "strongdm.svc", "qualname": "ControlPanel", "type": "class", "doc": "<p>ControlPanel contains all administrative controls.</p>\n"}, {"fullname": "strongdm.svc.ControlPanel.__init__", "modulename": "strongdm.svc", "qualname": "ControlPanel.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, channel, client)", "funcdef": "def"}, {"fullname": "strongdm.svc.ControlPanel.get_sshca_public_key", "modulename": "strongdm.svc", "qualname": "ControlPanel.get_sshca_public_key", "type": "function", "doc": "<p>GetSSHCAPublicKey retrieves the SSH CA public key.</p>\n", "signature": "(self, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.ControlPanel.verify_jwt", "modulename": "strongdm.svc", "qualname": "ControlPanel.verify_jwt", "type": "function", "doc": "<p>VerifyJWT reports whether the given JWT token (x-sdm-token) is valid.</p>\n", "signature": "(self, token, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Nodes", "modulename": "strongdm.svc", "qualname": "Nodes", "type": "class", "doc": "<p>Nodes make up the strongDM network, and allow your users to connect securely to your resources. There are two types of nodes:</p>\n\n<ul>\n<li><strong>Gateways</strong> are the entry points into network. They listen for connection from the strongDM client, and provide access to databases and servers.</li>\n<li><strong>Relays</strong> are used to extend the strongDM network into segmented subnets. They provide access to databases and servers but do not listen for incoming connections.\nSee:\n<code>strongdm.models.Gateway</code>\n<code>strongdm.models.Relay</code></li>\n</ul>\n"}, {"fullname": "strongdm.svc.Nodes.__init__", "modulename": "strongdm.svc", "qualname": "Nodes.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, channel, client)", "funcdef": "def"}, {"fullname": "strongdm.svc.Nodes.create", "modulename": "strongdm.svc", "qualname": "Nodes.create", "type": "function", "doc": "<p>Create registers a new Node.</p>\n", "signature": "(self, node, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Nodes.get", "modulename": "strongdm.svc", "qualname": "Nodes.get", "type": "function", "doc": "<p>Get reads one Node by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Nodes.update", "modulename": "strongdm.svc", "qualname": "Nodes.update", "type": "function", "doc": "<p>Update replaces all the fields of a Node by ID.</p>\n", "signature": "(self, node, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Nodes.delete", "modulename": "strongdm.svc", "qualname": "Nodes.delete", "type": "function", "doc": "<p>Delete removes a Node by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Nodes.list", "modulename": "strongdm.svc", "qualname": "Nodes.list", "type": "function", "doc": "<p>List gets a list of Nodes matching a given set of criteria.</p>\n", "signature": "(self, filter, *args, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.RemoteIdentities", "modulename": "strongdm.svc", "qualname": "RemoteIdentities", "type": "class", "doc": "<p>RemoteIdentities assign a resource directly to an account, giving the account the permission to connect to that resource.\nSee <code>strongdm.models.RemoteIdentity</code>.</p>\n"}, {"fullname": "strongdm.svc.RemoteIdentities.__init__", "modulename": "strongdm.svc", "qualname": "RemoteIdentities.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, channel, client)", "funcdef": "def"}, {"fullname": "strongdm.svc.RemoteIdentities.create", "modulename": "strongdm.svc", "qualname": "RemoteIdentities.create", "type": "function", "doc": "<p>Create registers a new RemoteIdentity.</p>\n", "signature": "(self, remote_identity, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.RemoteIdentities.get", "modulename": "strongdm.svc", "qualname": "RemoteIdentities.get", "type": "function", "doc": "<p>Get reads one RemoteIdentity by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.RemoteIdentities.update", "modulename": "strongdm.svc", "qualname": "RemoteIdentities.update", "type": "function", "doc": "<p>Update replaces all the fields of a RemoteIdentity by ID.</p>\n", "signature": "(self, remote_identity, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.RemoteIdentities.delete", "modulename": "strongdm.svc", "qualname": "RemoteIdentities.delete", "type": "function", "doc": "<p>Delete removes a RemoteIdentity by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.RemoteIdentities.list", "modulename": "strongdm.svc", "qualname": "RemoteIdentities.list", "type": "function", "doc": "<p>List gets a list of RemoteIdentities matching a given set of criteria.</p>\n", "signature": "(self, filter, *args, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.RemoteIdentityGroups", "modulename": "strongdm.svc", "qualname": "RemoteIdentityGroups", "type": "class", "doc": "<p>A RemoteIdentityGroup is a named grouping of Remote Identities for Accounts.\n An Account's relationship to a RemoteIdentityGroup is defined via RemoteIdentity objects.\nSee <code>strongdm.models.RemoteIdentityGroup</code>.</p>\n"}, {"fullname": "strongdm.svc.RemoteIdentityGroups.__init__", "modulename": "strongdm.svc", "qualname": "RemoteIdentityGroups.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, channel, client)", "funcdef": "def"}, {"fullname": "strongdm.svc.RemoteIdentityGroups.get", "modulename": "strongdm.svc", "qualname": "RemoteIdentityGroups.get", "type": "function", "doc": "<p>Get reads one RemoteIdentityGroup by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.RemoteIdentityGroups.list", "modulename": "strongdm.svc", "qualname": "RemoteIdentityGroups.list", "type": "function", "doc": "<p>List gets a list of RemoteIdentityGroups matching a given set of criteria.</p>\n", "signature": "(self, filter, *args, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Resources", "modulename": "strongdm.svc", "qualname": "Resources", "type": "class", "doc": "<p>Resources are databases, servers, clusters, websites, or clouds that strongDM\n delegates access to.\nSee:\n<code>strongdm.models.AKS</code>\n<code>strongdm.models.AKSBasicAuth</code>\n<code>strongdm.models.AKSServiceAccount</code>\n<code>strongdm.models.AKSServiceAccountUserImpersonation</code>\n<code>strongdm.models.AKSUserImpersonation</code>\n<code>strongdm.models.AmazonEKS</code>\n<code>strongdm.models.AmazonEKSInstanceProfile</code>\n<code>strongdm.models.AmazonEKSUserImpersonation</code>\n<code>strongdm.models.AmazonES</code>\n<code>strongdm.models.AmazonMQAMQP091</code>\n<code>strongdm.models.Athena</code>\n<code>strongdm.models.AuroraMysql</code>\n<code>strongdm.models.AuroraPostgres</code>\n<code>strongdm.models.AWS</code>\n<code>strongdm.models.AWSConsole</code>\n<code>strongdm.models.AWSConsoleStaticKeyPair</code>\n<code>strongdm.models.Azure</code>\n<code>strongdm.models.AzureCertificate</code>\n<code>strongdm.models.AzureMysql</code>\n<code>strongdm.models.AzurePostgres</code>\n<code>strongdm.models.BigQuery</code>\n<code>strongdm.models.Cassandra</code>\n<code>strongdm.models.Citus</code>\n<code>strongdm.models.Clustrix</code>\n<code>strongdm.models.Cockroach</code>\n<code>strongdm.models.DB2I</code>\n<code>strongdm.models.DB2LUW</code>\n<code>strongdm.models.DocumentDBHost</code>\n<code>strongdm.models.DocumentDBReplicaSet</code>\n<code>strongdm.models.Druid</code>\n<code>strongdm.models.DynamoDB</code>\n<code>strongdm.models.Elastic</code>\n<code>strongdm.models.ElasticacheRedis</code>\n<code>strongdm.models.GCP</code>\n<code>strongdm.models.GoogleGKE</code>\n<code>strongdm.models.GoogleGKEUserImpersonation</code>\n<code>strongdm.models.Greenplum</code>\n<code>strongdm.models.HTTPAuth</code>\n<code>strongdm.models.HTTPBasicAuth</code>\n<code>strongdm.models.HTTPNoAuth</code>\n<code>strongdm.models.Kubernetes</code>\n<code>strongdm.models.KubernetesBasicAuth</code>\n<code>strongdm.models.KubernetesServiceAccount</code>\n<code>strongdm.models.KubernetesServiceAccountUserImpersonation</code>\n<code>strongdm.models.KubernetesUserImpersonation</code>\n<code>strongdm.models.Maria</code>\n<code>strongdm.models.Memcached</code>\n<code>strongdm.models.Memsql</code>\n<code>strongdm.models.MongoHost</code>\n<code>strongdm.models.MongoLegacyHost</code>\n<code>strongdm.models.MongoLegacyReplicaset</code>\n<code>strongdm.models.MongoReplicaSet</code>\n<code>strongdm.models.MongoShardedCluster</code>\n<code>strongdm.models.MTLSMysql</code>\n<code>strongdm.models.MTLSPostgres</code>\n<code>strongdm.models.Mysql</code>\n<code>strongdm.models.Neptune</code>\n<code>strongdm.models.NeptuneIAM</code>\n<code>strongdm.models.Oracle</code>\n<code>strongdm.models.Postgres</code>\n<code>strongdm.models.Presto</code>\n<code>strongdm.models.RabbitMQAMQP091</code>\n<code>strongdm.models.RawTCP</code>\n<code>strongdm.models.RDP</code>\n<code>strongdm.models.Redis</code>\n<code>strongdm.models.Redshift</code>\n<code>strongdm.models.SingleStore</code>\n<code>strongdm.models.Snowflake</code>\n<code>strongdm.models.Snowsight</code>\n<code>strongdm.models.SQLServer</code>\n<code>strongdm.models.SSH</code>\n<code>strongdm.models.SSHCert</code>\n<code>strongdm.models.SSHCustomerKey</code>\n<code>strongdm.models.Sybase</code>\n<code>strongdm.models.SybaseIQ</code>\n<code>strongdm.models.Teradata</code></p>\n"}, {"fullname": "strongdm.svc.Resources.__init__", "modulename": "strongdm.svc", "qualname": "Resources.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, channel, client)", "funcdef": "def"}, {"fullname": "strongdm.svc.Resources.enumerate_tags", "modulename": "strongdm.svc", "qualname": "Resources.enumerate_tags", "type": "function", "doc": "<p>EnumerateTags gets a list of the filter matching tags.</p>\n", "signature": "(self, filter, *args, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Resources.create", "modulename": "strongdm.svc", "qualname": "Resources.create", "type": "function", "doc": "<p>Create registers a new Resource.</p>\n", "signature": "(self, resource, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Resources.get", "modulename": "strongdm.svc", "qualname": "Resources.get", "type": "function", "doc": "<p>Get reads one Resource by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Resources.update", "modulename": "strongdm.svc", "qualname": "Resources.update", "type": "function", "doc": "<p>Update replaces all the fields of a Resource by ID.</p>\n", "signature": "(self, resource, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Resources.delete", "modulename": "strongdm.svc", "qualname": "Resources.delete", "type": "function", "doc": "<p>Delete removes a Resource by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Resources.list", "modulename": "strongdm.svc", "qualname": "Resources.list", "type": "function", "doc": "<p>List gets a list of Resources matching a given set of criteria.</p>\n", "signature": "(self, filter, *args, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Roles", "modulename": "strongdm.svc", "qualname": "Roles", "type": "class", "doc": "<p>A Role has a list of access rules which determine which Resources the members\n of the Role have access to. An Account can be a member of multiple Roles via\n AccountAttachments.\nSee <code>strongdm.models.Role</code>.</p>\n"}, {"fullname": "strongdm.svc.Roles.__init__", "modulename": "strongdm.svc", "qualname": "Roles.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, channel, client)", "funcdef": "def"}, {"fullname": "strongdm.svc.Roles.create", "modulename": "strongdm.svc", "qualname": "Roles.create", "type": "function", "doc": "<p>Create registers a new Role.</p>\n", "signature": "(self, role, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Roles.get", "modulename": "strongdm.svc", "qualname": "Roles.get", "type": "function", "doc": "<p>Get reads one Role by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Roles.update", "modulename": "strongdm.svc", "qualname": "Roles.update", "type": "function", "doc": "<p>Update replaces all the fields of a Role by ID.</p>\n", "signature": "(self, role, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Roles.delete", "modulename": "strongdm.svc", "qualname": "Roles.delete", "type": "function", "doc": "<p>Delete removes a Role by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.Roles.list", "modulename": "strongdm.svc", "qualname": "Roles.list", "type": "function", "doc": "<p>List gets a list of Roles matching a given set of criteria.</p>\n", "signature": "(self, filter, *args, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.SecretStores", "modulename": "strongdm.svc", "qualname": "SecretStores", "type": "class", "doc": "<p>SecretStores are servers where resource secrets (passwords, keys) are stored.\nSee:\n<code>strongdm.models.AWSStore</code>\n<code>strongdm.models.AzureStore</code>\n<code>strongdm.models.CyberarkConjurStore</code>\n<code>strongdm.models.CyberarkPAMStore</code>\n<code>strongdm.models.CyberarkPAMExperimentalStore</code>\n<code>strongdm.models.DelineaStore</code>\n<code>strongdm.models.GCPStore</code>\n<code>strongdm.models.VaultAppRoleStore</code>\n<code>strongdm.models.VaultTLSStore</code>\n<code>strongdm.models.VaultTokenStore</code></p>\n"}, {"fullname": "strongdm.svc.SecretStores.__init__", "modulename": "strongdm.svc", "qualname": "SecretStores.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, channel, client)", "funcdef": "def"}, {"fullname": "strongdm.svc.SecretStores.create", "modulename": "strongdm.svc", "qualname": "SecretStores.create", "type": "function", "doc": "<p></p>\n", "signature": "(self, secret_store, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.SecretStores.get", "modulename": "strongdm.svc", "qualname": "SecretStores.get", "type": "function", "doc": "<p>Get reads one SecretStore by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.SecretStores.update", "modulename": "strongdm.svc", "qualname": "SecretStores.update", "type": "function", "doc": "<p>Update replaces all the fields of a SecretStore by ID.</p>\n", "signature": "(self, secret_store, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.SecretStores.delete", "modulename": "strongdm.svc", "qualname": "SecretStores.delete", "type": "function", "doc": "<p>Delete removes a SecretStore by ID.</p>\n", "signature": "(self, id, timeout=None)", "funcdef": "def"}, {"fullname": "strongdm.svc.SecretStores.list", "modulename": "strongdm.svc", "qualname": "SecretStores.list", "type": "function", "doc": "<p>List gets a list of SecretStores matching a given set of criteria.</p>\n", "signature": "(self, filter, *args, timeout=None)", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();